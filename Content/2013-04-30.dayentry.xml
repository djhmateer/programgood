<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2013-04-29T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;From around 12th Dec 2007: &lt;a href="http://www.programgood.net/2010/10/12/CodeGuessingProgram.aspx"&gt;http://www.programgood.net/2010/10/12/CodeGuessingProgram.aspx&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;The Challenge&lt;/h3&gt;  &lt;p&gt;Whilst reading Simon Sing's - The Code Book (www.simonsingh.com)&amp;#160; I thought it would be fun to write a code guessing program.&amp;#160; My first try was in Visual Basic6, then I ported it over to C#.&amp;#160; Phil decided he'd have a go and wrote it in Python then Java.&amp;#160; Then Dan wrote it in C.&amp;#160; We were all intrigued as to how fast each language would be, and who would be the winner?    &lt;br /&gt;    &lt;br /&gt;This program takes say x letters from lowercase a to z, in as a secretString (in all cases we used 'davedave' for 8, then 'davedav' for 7 etc..)&amp;#160; Then it tries to guess the secretString by starting at aaaaaaaa and finishing at zzzzzzzz (for the 8 length example).&amp;#160; It was not allowed guess each letter individually, it had to guess the entire string correctly.     &lt;br /&gt;    &lt;br /&gt;Without further words... here are the current results, and below is the source code.&amp;#160; My machine runs an Athlon 1500+ processor with 3/4gig of RAM, and WinXPSP2.&lt;/p&gt;  &lt;p&gt;--------&lt;/p&gt;  &lt;p&gt;   &lt;table cellspacing="0" cellpadding="2" width="600" border="1"&gt;&lt;tbody&gt;       &lt;tr&gt;         &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;Total Combinations (approx)&lt;/td&gt;          &lt;td valign="top" width="54"&gt;PHP&lt;/td&gt;          &lt;td valign="top" width="54"&gt;C&lt;/td&gt;          &lt;td valign="top" width="54"&gt;Python&lt;/td&gt;          &lt;td valign="top" width="54"&gt;Java&lt;/td&gt;          &lt;td valign="top" width="54"&gt;C#&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="54"&gt;4&lt;/td&gt;          &lt;td valign="top" width="54"&gt;dave&lt;/td&gt;          &lt;td valign="top" width="54"&gt;52,278&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="54"&gt;5&lt;/td&gt;          &lt;td valign="top" width="54"&gt;daved&lt;/td&gt;          &lt;td valign="top" width="54"&gt;1,380,000&lt;/td&gt;          &lt;td valign="top" width="54"&gt;9s&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;8&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="54"&gt;6&lt;/td&gt;          &lt;td valign="top" width="54"&gt;daveda&lt;/td&gt;          &lt;td valign="top" width="54"&gt;36,000,000&lt;/td&gt;          &lt;td valign="top" width="54"&gt;221s&lt;/td&gt;          &lt;td valign="top" width="54"&gt;2&lt;/td&gt;          &lt;td valign="top" width="54"&gt;208&lt;/td&gt;          &lt;td valign="top" width="54"&gt;282&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="54"&gt;7&lt;/td&gt;          &lt;td valign="top" width="54"&gt;davedav&lt;/td&gt;          &lt;td valign="top" width="54"&gt;936,416,178&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;25&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;23&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;         &lt;td valign="top" width="54"&gt;8&lt;/td&gt;          &lt;td valign="top" width="54"&gt;davedave&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;678 (11min)&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;          &lt;td valign="top" width="54"&gt;&amp;#160;&lt;/td&gt;       &lt;/tr&gt;     &lt;/tbody&gt;&lt;/table&gt; &lt;/p&gt;  &lt;p&gt;2007 times above.&lt;/p&gt;  &lt;p&gt;2010 on Intel Core2 Dual 2.4GHz 9.5s (for #7)&lt;/p&gt;  &lt;p&gt;2013 on i7 SandyBridge 2GHz&amp;#160; (4s for single thread&amp;#160; #7)…&amp;#160; ( 4s for multi thread&amp;#160; #8)&lt;/p&gt;  &lt;p&gt;Here is the code (roughly the same):&lt;/p&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:e1e35612-08b2-4e74-8ae5-8368a8770f36" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px;"&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;using&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; System;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#0000ff"&gt;using&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; System.Diagnostics;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#0000ff"&gt;using&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; System.Text;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#0000ff"&gt;namespace&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; PasswordGuesserSingleThread&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Main()&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; s = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Stopwatch&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;();&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;s.Start();&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;long&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; counter = 0;&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Starting...&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// array of bytes (can be 0 to 255) eg 100, 97, 118, 101, 100, 97, 118&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] secretBytes = &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Encoding&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.UTF8.GetBytes(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;davedav&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; comparisonBytes = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[secretBytes.Length];&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// loop 1&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; i = 97; i &amp;lt; 123; i++)&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;comparisonBytes[0] = i;&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop2&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; j = 97; j &amp;lt; 123; j++)&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                     &lt;span style="background:#ffffff;color:#000000"&gt;comparisonBytes[1] = j;&lt;/span&gt;&lt;br&gt;                     &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop 3&lt;/span&gt;&lt;br&gt;                     &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; k = 97; k &amp;lt; 123; k++)&lt;/span&gt;&lt;br&gt;                     &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                         &lt;span style="background:#ffffff;color:#000000"&gt;comparisonBytes[2] = k;&lt;/span&gt;&lt;br&gt;                         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop4&lt;/span&gt;&lt;br&gt;                         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; l = 97; l &amp;lt; 123; l++)&lt;/span&gt;&lt;br&gt;                         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                             &lt;span style="background:#ffffff;color:#000000"&gt;comparisonBytes[3] = l;&lt;/span&gt;&lt;br&gt;                             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop 5&lt;/span&gt;&lt;br&gt;                             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; m = 97; m &amp;lt; 123; m++)&lt;/span&gt;&lt;br&gt;                             &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                                 &lt;span style="background:#ffffff;color:#000000"&gt;comparisonBytes[4] = m;&lt;/span&gt;&lt;br&gt;                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop6&lt;/span&gt;&lt;br&gt;                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; n = 97; n &amp;lt; 123; n++)&lt;/span&gt;&lt;br&gt;                                 &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                                     &lt;span style="background:#ffffff;color:#000000"&gt;comparisonBytes[5] = n;&lt;/span&gt;&lt;br&gt;                                     &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop7&lt;/span&gt;&lt;br&gt;                                     &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; o = 97; o &amp;lt; 123; o++)&lt;/span&gt;&lt;br&gt;                                     &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                                         &lt;span style="background:#ffffff;color:#000000"&gt;comparisonBytes[6] = o;&lt;/span&gt;&lt;br&gt;                                         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop8&lt;/span&gt;&lt;br&gt;                                         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//for (byte p = 97; p &amp;lt; 123; p++)&lt;/span&gt;&lt;br&gt;                                         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//{&lt;/span&gt;&lt;br&gt;                                         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//   comparisonBytes[7] = p;&lt;/span&gt;&lt;br&gt; &lt;br&gt;                                             &lt;span style="background:#ffffff;color:#000000"&gt;counter++;&lt;/span&gt;&lt;br&gt; &lt;br&gt;                                             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// compare  to&lt;/span&gt;&lt;br&gt;                                             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;if&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (CompareByteArrays(comparisonBytes, secretBytes))&lt;/span&gt;&lt;br&gt;                                             &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; comparisonString = &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Encoding&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.UTF8.GetString(comparisonBytes);&lt;/span&gt;&lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Found secret which is {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; after {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;1}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; pattern matches&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, comparisonString, &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;String&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Format(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;{&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0:n0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, counter));&lt;/span&gt;&lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;s.Stop();&lt;/span&gt;&lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;TimeSpan&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; t = s.Elapsed;&lt;/span&gt;&lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Timespan: {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;s&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, t.TotalSeconds);&lt;/span&gt;&lt;br&gt; &lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;long&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; throughput = counter / (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;long&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;)t.TotalSeconds;&lt;/span&gt;&lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Throughput: {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;comparisons/sec&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;String&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Format(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;{&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0:n0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, throughput));&lt;/span&gt;&lt;br&gt; &lt;br&gt;                                                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;goto&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; End;&lt;/span&gt;&lt;br&gt;                                             &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt;                                         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//} //end loop 8&lt;/span&gt;&lt;br&gt;                                     &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//end loop 7&lt;/span&gt;&lt;br&gt;                                 &lt;span style="background:#ffffff;color:#000000"&gt;} &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 6&lt;/span&gt;&lt;br&gt;                             &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 5&lt;/span&gt;&lt;br&gt;                         &lt;span style="background:#ffffff;color:#000000"&gt;} &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//end loop 4&lt;/span&gt;&lt;br&gt;                     &lt;span style="background:#ffffff;color:#000000"&gt;} &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 3&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 2&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//end 1&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Got to end and didn&amp;#39;t find&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;End:&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.ReadLine();&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;bool&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; CompareByteArrays(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] comparison, &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] secret)&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// compare each byte&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; i = 0; i &amp;lt; 7; i++)&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;if&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (comparison[i] != secret[i]) &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;return&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;;&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;return&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;true&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;;&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/The-Coding-Challenge_10B1D/image_10.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/The-Coding-Challenge_10B1D/image_thumb_4.png" width="454" height="90" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/The-Coding-Challenge_10B1D/image_8.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/The-Coding-Challenge_10B1D/image_thumb_3.png" width="452" height="97" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;See next post for multithreaded version which hits 750million comparisons per sec.&lt;/p&gt;</Content>
      <Created>2013-04-30T14:42:27.3988343-04:00</Created>
      <Modified>2013-05-02T17:14:48.9078901-04:00</Modified>
      <EntryId>d4c4d134-20ca-4a2a-ad0f-958b1bf63ef2</EntryId>
      <Description />
      <Title>The Coding Challenge 2013</Title>
      <Categories>Coding Challenge</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;h3&gt;Safari:&lt;/h3&gt;  &lt;p&gt;command L - select address bar&lt;/p&gt;  &lt;p&gt;spacebar to scroll&lt;/p&gt;  &lt;p&gt;command enter - open link in new tab&lt;/p&gt;  &lt;p&gt;command t - new tab &lt;/p&gt;  &lt;p&gt;command w - close tab&lt;/p&gt;</Content>
      <Created>2013-04-30T13:36:06.0532881-04:00</Created>
      <Modified>2013-04-30T13:36:06.0532881-04:00</Modified>
      <EntryId>e0c90bfd-c302-4dee-b31d-e2b6985d8120</EntryId>
      <Description />
      <Title>Mac Keyboard Shortcuts</Title>
      <Categories>Apple Mac;Safari</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_2.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_thumb.png" width="438" height="254" /&gt;&lt;/a&gt;    &lt;br /&gt;3GB RAM, 2048 Stream Processors&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_4.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_thumb_1.png" width="439" height="311" /&gt;&lt;/a&gt;    &lt;br /&gt;i7 IvyBridge 3.5GHz, 750W power supply, 2*GPU’s very hot (up to 110C) and noisy&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_6.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_thumb_2.png" width="698" height="296" /&gt;&lt;/a&gt;    &lt;br /&gt;1.17 Billion comparisons per second.&amp;#160; No overclocking.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_10.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/image_thumb_4.png" width="704" height="404" /&gt;&lt;/a&gt;    &lt;br /&gt;18hours of processing&lt;/p&gt;          &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/clip_image001_2.jpg"&gt;&lt;img title="clip_image001" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image001" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Mining-on_8648/clip_image001_thumb.jpg" width="244" height="117" /&gt;&lt;/a&gt;    &lt;br /&gt;£2.53 earned&lt;/p&gt;</Content>
      <Created>2013-04-30T04:54:51.9074405-04:00</Created>
      <Modified>2013-04-30T04:54:51.9074405-04:00</Modified>
      <EntryId>29ab2ebf-dcd7-4630-884d-637bdc8860bf</EntryId>
      <Description />
      <Title>Bitcoin Mining on 2*ATI7970</Title>
      <Categories>Bitcoin</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>