<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-08-26T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV215"&gt;http://channel9.msdn.com/Events/TechEd/NorthAmerica/2012/DEV215&lt;/a&gt;&amp;#160; - June 14th 2012.&amp;#160; Adam Tuliper &lt;a href="http://completedevelopment.blogspot.co.uk/"&gt;http://completedevelopment.blogspot.co.uk/&lt;/a&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Patterns &lt;/li&gt;    &lt;li&gt;Code-First &lt;/li&gt;    &lt;li&gt;DB/Model First &lt;/li&gt;    &lt;li&gt;Repo pattern &lt;/li&gt;    &lt;li&gt;Code Migrations (4.3) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Why EF?&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;FAST Setup &lt;/li&gt;    &lt;li&gt;Eager / Lazy loading &lt;/li&gt;    &lt;li&gt;Validation &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Tooling / Everything&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;SQL Compact Toolbox (useful for integration testing…create db at start of tests)..binary deploymnet &lt;/li&gt;    &lt;li&gt;EF Power Tools - &lt;a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d"&gt;http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d&lt;/a&gt;&amp;#160;&amp;#160; (for Reverse Engineer) &lt;/li&gt;    &lt;li&gt;MiniProfiler (stackexchange guys - &lt;a href="http://miniprofiler.com/"&gt;http://miniprofiler.com/&lt;/a&gt;) &lt;/li&gt;    &lt;li&gt;Layers      &lt;ul&gt;       &lt;li&gt;Web &lt;/li&gt;        &lt;li&gt;Domain – Entities and Repository Interfaces &lt;/li&gt;        &lt;li&gt;DataAccess (Repository implementations and Context) &lt;/li&gt;        &lt;li&gt;Test Project &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Design and create entities &lt;/li&gt;    &lt;li&gt;Add validation &lt;/li&gt;    &lt;li&gt;Handle concurrency &lt;/li&gt;    &lt;li&gt;Repository pattern for all CRUD &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Understanding EF&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Context      &lt;ul&gt;       &lt;li&gt;All CRUD handles context &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;POCO      &lt;ul&gt;       &lt;li&gt;Persistent ignorant &lt;/li&gt;        &lt;li&gt;Can contain business logics &lt;/li&gt;        &lt;li&gt;Does not know anything about persistence &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Entity States      &lt;ul&gt;       &lt;li&gt;Added &lt;/li&gt;        &lt;li&gt;Detached &lt;/li&gt;        &lt;li&gt;Unchanged &lt;/li&gt;        &lt;li&gt;Modified &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Model First/Database First&lt;/h3&gt;  &lt;p&gt;Pros&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Visual designer &lt;/li&gt;    &lt;li&gt;Easy code regen with model or db changes &lt;/li&gt;    &lt;li&gt;Very fast &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Cons&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Some dont like XML based EDMX file. &lt;/li&gt;    &lt;li&gt;Some feel loss of control without pure code &lt;/li&gt;    &lt;li&gt;please use: DbContext Generator T4 templates &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_2.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb.png" width="244" height="95" /&gt;&lt;/a&gt;     &lt;br /&gt;Installed EF5 in VS2010 – interestingly I get 4.4… this is against .NET4&lt;/p&gt;  &lt;p&gt;Add new ADO.NET Entity Data Model.&amp;#160; Have got DB already.&amp;#160; Generate from Database.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_4.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_1.png" width="376" height="268" /&gt;&lt;/a&gt;     &lt;br /&gt;Put together a simple database and used&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_6.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_2.png" width="244" height="108" /&gt;&lt;/a&gt;     &lt;br /&gt;Create the object so can F12 go to definition.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_10.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_4.png" width="244" height="164" /&gt;&lt;/a&gt;     &lt;br /&gt;Code gen strategy was Default.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_8.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_3.png" width="244" height="202" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_12.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_5.png" width="244" height="97" /&gt;&lt;/a&gt;     &lt;br /&gt;Code gen is none now.&lt;/p&gt;  &lt;p&gt;In VS11 wont need to use the template trick.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_16.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_7.png" width="166" height="135" /&gt;&lt;/a&gt;     &lt;br /&gt;The template creates nice POCO’s and a TuliperEntities Context which inherits off DbContext&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_18.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_8.png" width="338" height="172" /&gt;&lt;/a&gt;     &lt;br /&gt;How the POCOs get to the database     &lt;br /&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_14.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_6.png" width="270" height="153" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Code First&lt;/h3&gt;  &lt;p&gt;&lt;a href="https://docs.google.com/file/d/0B5XxGi0aNE6bM1JNdm4tWDFUeWlDSHY1T3Nwd0xqQQ/edit#"&gt;https://docs.google.com/file/d/0B5XxGi0aNE6bM1JNdm4tWDFUeWlDSHY1T3Nwd0xqQQ/edit#&lt;/a&gt; – Sample app of Adam’s from lslive Las Vegas&lt;/p&gt;  &lt;p&gt;Pros&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;simple &lt;/li&gt;    &lt;li&gt;specify initializers to create db &lt;/li&gt;    &lt;li&gt;power is unit and integration testing &lt;/li&gt;    &lt;li&gt;fluent api for clean attributes for validation &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Cons&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;No visual designer &lt;/li&gt;    &lt;li&gt;No direct SP support &lt;/li&gt;    &lt;li&gt;power tools – can reverse engineer an existing db &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_20.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_9.png" width="441" height="195" /&gt;&lt;/a&gt;     &lt;br /&gt;Right click on project with EF Power Tools installed.&amp;#160; Reverse Engineer Code First.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_22.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_10.png" width="370" height="256" /&gt;&lt;/a&gt;     &lt;br /&gt;Validation using Fluent API.&lt;/p&gt;  &lt;p&gt;DataAnnotations – if want client side validation… jQuery unobtrusive validation..html5…if using ViewModels need to put dataannotations on the viewmodel.&lt;/p&gt;  &lt;p&gt;or Custom Validators on Model or ViewModel.&lt;/p&gt;  &lt;p&gt;“A lot of smart people, don’t do client side validation”&lt;/p&gt;  &lt;p&gt;Global.asax&lt;/p&gt;  &lt;p&gt;global action filters to catch concurrency … using AOP&lt;/p&gt;  &lt;p&gt;timestamp&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_24.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_11.png" width="721" height="255" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Data Migrations&lt;/h3&gt;  &lt;p&gt;can migrate model changes to database ie creates SQL&lt;/p&gt;  &lt;p&gt;enable automatic migrations&lt;/p&gt;  &lt;p&gt;update-database –script –verbose&lt;/p&gt;  &lt;p&gt;Allows rollback into Migration table.&lt;/p&gt;  &lt;h3&gt;Testing&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_26.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/EF4.3-for-Real-Web-Applications_9CC3/image_thumb_12.png" width="444" height="555" /&gt;&lt;/a&gt;&lt;/p&gt;</Content>
      <Created>2012-08-27T05:43:57.8058234-04:00</Created>
      <Modified>2012-08-27T05:53:12.9496649-04:00</Modified>
      <EntryId>a8cba86e-be01-4f6f-805d-6358b5cef4ce</EntryId>
      <Description />
      <Title>EF4.3 for Real Web Applications</Title>
      <Categories>Entity Framework</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;p&gt;Video from MIX11 &lt;a href="http://channel9.msdn.com/Events/MIX/MIX11/FRM13"&gt;http://channel9.msdn.com/Events/MIX/MIX11/FRM13&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;GUI &lt;/h3&gt;  &lt;p&gt;Adding Athlete object&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_2.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb.png" width="378" height="244" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Using GUI to do the scaffolding… used this Template.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_4.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_1.png" width="244" height="89" /&gt;&lt;/a&gt;     &lt;br /&gt;Got this error doing a many to many relationship on Scaffolding the MedalAwards controller.&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:de28a018-664d-42c3-9329-c3ec92668f93" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px;"&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Athlete&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; AthleteId { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; Name { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; Country { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;     }&lt;br&gt;     &lt;span style="color:#008000"&gt;//many athletes can have many medaltypes&lt;/span&gt;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalAward&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; Id { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; Event { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//the FK property&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; MedalTypeId { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;virtual&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalType&lt;/span&gt; MedalType { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//now link to athlete..could put AthleteId property here&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//[ForeignKey(&amp;quot;WinnerId&amp;quot;)] &lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//public virtual Athlete Winner { get; set; }&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; AthleteId { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;virtual&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Athlete&lt;/span&gt; Athlete { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt; &lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalType&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; Id { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; Name { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;     }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;   &lt;br /&gt;Shifted my model to a simple many to many.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_6.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_2.png" width="247" height="336" /&gt;&lt;/a&gt;     &lt;br /&gt;Many to many working!&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_8.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_3.png" width="400" height="149" /&gt;&lt;/a&gt;     &lt;br /&gt;Alt V E O to get Package Manager Console     &lt;br /&gt;Making a repository pattern.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_10.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_4.png" width="719" height="263" /&gt;&lt;/a&gt;     &lt;br /&gt;Templates knew that we’ll be need the 3 repos.&amp;#160; Does eager loading so not loads of db calls for each query.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_12.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_5.png" width="726" height="142" /&gt;&lt;/a&gt;     &lt;br /&gt;get-package&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:a65bc739-2de0-4172-a31f-0e18b0b678a5" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 400px; overflow: auto; padding: 2px 5px;"&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Athlete&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#008000"&gt;//public int AthleteId { get; set; }&lt;/span&gt;&lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Key&lt;/span&gt;] &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Guid&lt;/span&gt; CompetitorUniqueRef { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Required&lt;/span&gt;, &lt;span style="color:#2b91af"&gt;StringLength&lt;/span&gt;(53)] &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; Name { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; Country { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;     }&lt;br&gt;     &lt;span style="color:#008000"&gt;//many athletes can have many medaltypes&lt;/span&gt;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalAward&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; Id { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; Event { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//the FK property&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; MedalTypeId { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;virtual&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalType&lt;/span&gt; MedalType { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//now link to athlete..could put AthleteId property here&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//[ForeignKey(&amp;quot;WinnerId&amp;quot;)] &lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//public virtual Athlete Winner { get; set; }&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//public int AthleteId { get; set; }&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Guid&lt;/span&gt; AthleteId { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;virtual&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Athlete&lt;/span&gt; Athlete { &lt;span style="color:#0000ff"&gt;get&lt;/span&gt;; &lt;span style="color:#0000ff"&gt;set&lt;/span&gt;; }&lt;br&gt;     }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;changed the PK of athlete to be something different and not conventional.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_14.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_6.png" width="244" height="91" /&gt;&lt;/a&gt;     &lt;br /&gt;after a re-scaffold&lt;/p&gt;  &lt;h3&gt;Seed Data (pre code Migrations)&lt;/h3&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:5cd8cd7d-e713-45ee-a88c-2eaff7007743" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 300px; overflow: auto; padding: 2px 5px;"&gt; &lt;span style="color:#008000"&gt;//could use codeMigrations&lt;/span&gt;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MyInitialiser&lt;/span&gt; : &lt;span style="color:#2b91af"&gt;DropCreateDatabaseIfModelChanges&lt;/span&gt;&amp;lt;&lt;span style="color:#2b91af"&gt;OlympicsContext&lt;/span&gt;&amp;gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;protected&lt;/span&gt; &lt;span style="color:#0000ff"&gt;override&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; Seed(&lt;span style="color:#2b91af"&gt;OlympicsContext&lt;/span&gt; context)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#008000"&gt;//sample medal types&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; gold = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalType&lt;/span&gt; {Name = &lt;span style="color:#a31515"&gt;&amp;quot;Gold&amp;quot;}&lt;/span&gt;;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; silver = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalType&lt;/span&gt; {Name = &lt;span style="color:#a31515"&gt;&amp;quot;Silver&amp;quot;}&lt;/span&gt;;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; bronze = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalType&lt;/span&gt; {Name = &lt;span style="color:#a31515"&gt;&amp;quot;Bronze&amp;quot;}&lt;/span&gt;;&lt;br&gt; &lt;br&gt;             &lt;span style="color:#0000ff"&gt;foreach&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;var&lt;/span&gt; medalType &lt;span style="color:#0000ff"&gt;in&lt;/span&gt; &lt;span style="color:#0000ff"&gt;new&lt;/span&gt;[] {gold,silver,bronze})&lt;br&gt;                 context.MedalTypes.Add(medalType);&lt;br&gt; &lt;br&gt;             &lt;span style="color:#008000"&gt;//sample athletes&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; dave = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Athlete&lt;/span&gt; { Name = &lt;span style="color:#a31515"&gt;&amp;quot;Dave Mateer&amp;quot;&lt;/span&gt;, Country = &lt;span style="color:#a31515"&gt;&amp;quot;Great Britain&amp;quot;&lt;/span&gt;, CompetitorUniqueRef = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Guid&lt;/span&gt;(&lt;span style="color:#a31515"&gt;&amp;quot;96ac9b12-b992-4377-bd85-3dde1a760aa5&amp;quot;&lt;/span&gt;) };&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; usain = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Athlete&lt;/span&gt; { Name = &lt;span style="color:#a31515"&gt;&amp;quot;Usain Bolt&amp;quot;&lt;/span&gt;, Country = &lt;span style="color:#a31515"&gt;&amp;quot;Jamaica&amp;quot;&lt;/span&gt;, CompetitorUniqueRef = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Guid&lt;/span&gt;(&lt;span style="color:#a31515"&gt;&amp;quot;a283b455-b109-434c-8800-4a80f914cc38&amp;quot;&lt;/span&gt;) };&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; bob = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Athlete&lt;/span&gt; { Name = &lt;span style="color:#a31515"&gt;&amp;quot;Bob Smith&amp;quot;&lt;/span&gt;, Country = &lt;span style="color:#a31515"&gt;&amp;quot;New Zealand&amp;quot;&lt;/span&gt;, CompetitorUniqueRef = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Guid&lt;/span&gt;(&lt;span style="color:#a31515"&gt;&amp;quot;a9e55b45-e7f9-44bb-bd9e-d3c2a08b02ce&amp;quot;&lt;/span&gt;) };&lt;br&gt; &lt;br&gt;             &lt;span style="color:#0000ff"&gt;foreach&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;var&lt;/span&gt; athlete &lt;span style="color:#0000ff"&gt;in&lt;/span&gt; &lt;span style="color:#0000ff"&gt;new&lt;/span&gt;[] { dave, usain, bob })&lt;br&gt;                 context.Athletes.Add(athlete);&lt;br&gt; &lt;br&gt;             &lt;span style="color:#008000"&gt;//sample medal awards&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; awards = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt;[]&lt;br&gt;                              {&lt;br&gt;                                  &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalAward&lt;/span&gt; {Event = &lt;span style="color:#a31515"&gt;&amp;quot;100m Sprint&amp;quot;&lt;/span&gt;, Athlete = usain, MedalType = gold},&lt;br&gt;                                  &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;MedalAward&lt;/span&gt; {Event = &lt;span style="color:#a31515"&gt;&amp;quot;50k&amp;quot;&lt;/span&gt;, Athlete = dave, MedalType = silver}&lt;br&gt;                              };&lt;br&gt;             &lt;span style="color:#0000ff"&gt;foreach&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;var&lt;/span&gt; award &lt;span style="color:#0000ff"&gt;in&lt;/span&gt; awards)&lt;br&gt;             {&lt;br&gt;                 context.MedalAwards.Add(award);&lt;br&gt;             }&lt;br&gt; &lt;br&gt;         }&lt;br&gt;     }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;Putting in a seeder of data when the database has to be regenerated.&lt;/p&gt;  &lt;h3&gt;Fluent Mappings&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_16.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_7.png" width="611" height="148" /&gt;&lt;/a&gt;     &lt;br /&gt;Mapping what is in MVC to the DB.&amp;#160; This created a new table in the DB called PEOPLE, and a column called TERRITORY_OF_ORIGIN&lt;/p&gt;  &lt;h3&gt;Final Product&lt;/h3&gt;  &lt;p&gt;Keeping things conventional makes scaffolding easier to mock something up quickly, and to remember the syntax.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_18.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_8.png" width="429" height="305" /&gt;&lt;/a&gt;    &lt;br /&gt;Many to many relationship&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_20.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/MVC3-ScaffoldingSteve-Sanderson_11AFD/image_thumb_9.png" width="447" height="104" /&gt;&lt;/a&gt;&lt;/p&gt;</Content>
      <Created>2012-08-27T05:34:25.4020199-04:00</Created>
      <Modified>2012-08-27T05:34:25.4020199-04:00</Modified>
      <EntryId>a226c4d2-bbb5-44c3-be57-00a1c8da607d</EntryId>
      <Description />
      <Title>MVC3 Scaffolding–Steve Sanderson</Title>
      <Categories>MVC3;MvcScaffolding</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>