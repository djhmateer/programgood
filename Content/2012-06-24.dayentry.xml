<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-06-23T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;From the very good video on youtube: python google&lt;/p&gt;  &lt;p&gt;&lt;a href="http://code.google.com/edu/languages/google-python-class/"&gt;http://code.google.com/edu/languages/google-python-class/&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;alt P in IDLE is previous command&lt;/p&gt;  &lt;h3&gt;How to Run a Python Script&lt;/h3&gt;  &lt;p&gt;#!/usr/bin/python2.4 -tt   &lt;br /&gt;# Copyright 2008 Google Inc.&lt;/p&gt;  &lt;p&gt;# Define a main() function that prints a little greeting   &lt;br /&gt;def main():    &lt;br /&gt;&amp;#160; print &amp;quot;Hello&amp;quot;    &lt;br /&gt;&amp;#160; &lt;br /&gt;# This is the standard boilderplate that calls the main() function    &lt;br /&gt;if __name__ == '__main__':    &lt;br /&gt;&amp;#160; main()    &lt;br /&gt;&amp;#160;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_12.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_thumb_4.png" width="377" height="175" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;2 ways of running the python program&lt;/p&gt;  &lt;h3&gt;Import a Module&lt;/h3&gt;    &lt;p&gt;# sys is a module which lets you access lots of command line stuff, system stuff   &lt;br /&gt;import sys&lt;/p&gt;  &lt;p&gt;# Define a main() function that prints a little greeting   &lt;br /&gt;def main():    &lt;br /&gt;&amp;#160; print sys.argv&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_9.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_thumb_3.png" width="425" height="41" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Prints out a python list which has square brackets around it.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_6.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_thumb_2.png" width="363" height="85" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;when we forget to do the import.&lt;/p&gt;      &lt;p&gt;import takes the symbol sys, and binds it to something.&lt;/p&gt;  &lt;h2&gt;Conditionals&lt;/h2&gt;  &lt;p&gt;import sys&lt;/p&gt;  &lt;p&gt;def Hello(name):   &lt;br /&gt;&amp;#160; if name == 'Alice' or name == 'Nick':    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; print 'Alert: Alice Mode'    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; name = name + '???'    &lt;br /&gt;&amp;#160; else:    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; DoesNotExist(name)    &lt;br /&gt;&amp;#160; name = name + '!!!!'    &lt;br /&gt;&amp;#160; print 'Hello', name&lt;/p&gt;  &lt;p&gt;# Define a main() function that prints a little greeting   &lt;br /&gt;def main():    &lt;br /&gt;&amp;#160; Hello(sys.argv[1])&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_14.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/PythonGoogle-Tutorial_AF84/image_thumb_5.png" width="244" height="64" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Python does everything at the last possible second, so no compile time checking.. just runs the code.&amp;#160; So if it doesn’t actually see the error line, it wont catch anything.&lt;/p&gt;  &lt;p&gt;what this means is that unit testing is important for industrial strength code.&lt;/p&gt;  &lt;h2&gt;Strings&lt;/h2&gt;  &lt;p&gt;strings are immutable&lt;/p&gt;  &lt;p&gt;a.lower()&amp;#160; - this brings back a new string lowered.&amp;#160; a is unchanged.&lt;/p&gt;  &lt;p&gt;a string method.&lt;/p&gt;  &lt;p&gt;a.find(‘e’) – searches in the string for the first e.&amp;#160; returns index of first e.&lt;/p&gt;  &lt;p&gt;a[0] – prints left most character&lt;/p&gt;  &lt;p&gt;a+b – concats&lt;/p&gt;  &lt;p&gt;‘Hi %s I have %d donuts’ %(‘Alice’, 42)&lt;/p&gt;  &lt;p&gt;Unicode got better in Python3.&lt;/p&gt;  &lt;p&gt;a[1:3] – up to but not including.&amp;#160; A slice in python.&amp;#160; A very pythonic feature – short and crisp!&lt;/p&gt;  &lt;p&gt;can also use negative numbers which start at the right of the string&lt;/p&gt;  &lt;p&gt;a[:-3] – not the last 3 characters of the string.&lt;/p&gt;</Content>
      <Created>2012-06-24T17:45:48.6297972-04:00</Created>
      <Modified>2012-06-24T17:51:17.6640562-04:00</Modified>
      <EntryId>e0a2c628-faed-48c9-a5ce-1ccfb96d1c2f</EntryId>
      <Description />
      <Title>Python–Google Tutorial</Title>
      <Categories>Python</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>