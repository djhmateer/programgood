<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2013-04-30T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/ee256691.aspx"&gt;http://msdn.microsoft.com/en-us/library/ee256691.aspx&lt;/a&gt; â€“ Using Cancellation tokens&lt;/p&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:2719fc21-342b-4562-bffd-743a1ac717b0" class="wlWriterSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;   &lt;div style="font-size: 10pt; border-top: #000080 1px solid; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; border-right: #000080 1px solid; border-bottom: #000080 1px solid; color: #000; border-left: #000080 1px solid"&gt;     &lt;div style="overflow: auto; padding-bottom: 2px; padding-top: 2px; padding-left: 5px; padding-right: 5px; background-color: #ffffff"&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;using&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; System;&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;using&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; System.Threading;&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;using&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; System.Threading.Tasks;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;namespace&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; ParallelCancel&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;class&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Program&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;static&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;void&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; Main()&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// want to break out of a parallel.for when a condition occurs&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;var&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; cts = &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;new&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;CancellationTokenSource&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// Use ParallelOptions instance to store the CancellationToken&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;var&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; po = &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;new&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;ParallelOptions&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;po.CancellationToken = cts.Token;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;try&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// could use syntax i =&amp;gt; {&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Parallel&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.For(1, 100, po, &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;delegate&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;(&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;int&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; i)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;po.CancellationToken.ThrowIfCancellationRequested();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(i);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;if&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (i == 50)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;cts.Cancel();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;});&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;catch&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;OperationCanceledException&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; e)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;Cancelled&amp;quot;&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;&lt;/div&gt;   &lt;/div&gt; &lt;/div&gt;  &lt;br /&gt;Simple example of cancellation tokens   &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:f93ee823-871f-490b-afd0-0c35adf3cf1b" class="wlWriterSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;   &lt;div style="font-size: 10pt; border-top: #000080 1px solid; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; border-right: #000080 1px solid; border-bottom: #000080 1px solid; color: #000; border-left: #000080 1px solid"&gt;     &lt;div style="overflow: auto; padding-bottom: 2px; padding-top: 2px; padding-left: 5px; padding-right: 5px; background-color: #ffffff"&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;using&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; System;&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;using&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; System.Threading;&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;using&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; System.Threading.Tasks;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;namespace&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; ParallelCancel&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;class&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Program&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;static&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;void&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; Main()&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// want to break out of a parallel.for when a condition occurs&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;var&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; cts = &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;new&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;CancellationTokenSource&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// Use ParallelOptions instance to store the CancellationToken&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;var&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; po = &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;new&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;ParallelOptions&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;po.CancellationToken = cts.Token;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;long&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterTotal = 0;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;try&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// could use syntax i =&amp;gt; {&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// want to have a sum of counts at the end&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Parallel&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.For&amp;lt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;long&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;&amp;gt;(1, 10000000, po, () =&amp;gt; 0, &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;delegate&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;(&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;int&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; i, &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;ParallelLoopState&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; state, &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;long&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterSubtotal)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;po.CancellationToken.ThrowIfCancellationRequested();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;//CConsole.WriteLine(i);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;counterSubtotal++;&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;if&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (i == 50000)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;cts.Cancel();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;//});&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterSubtotal;&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}, (x) =&amp;gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Interlocked&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.Add(&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;ref&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterTotal, x)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;catch&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;OperationCanceledException&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; e)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;Cancelled&amp;quot;&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;Total iterations across all threads {&lt;/span&gt;&lt;span style="background: #ffffff; color: #3cb371"&gt;0}&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;, counterTotal);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;&lt;/div&gt;   &lt;/div&gt; &lt;/div&gt;  &lt;br /&gt;Cancellation tokens with a â€˜global stateâ€™ variable handled well.&amp;#160; ie the counter is summed up at the end.   &lt;p&gt;this code works well (from &lt;a href="http://stackoverflow.com/questions/16344736/parallelfor-not-cancelling-all-threads-immediately-if-condition-met"&gt;http://stackoverflow.com/questions/16344736/parallelfor-not-cancelling-all-threads-immediately-if-condition-met&lt;/a&gt;)&lt;/p&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:92fef681-7396-4931-985b-0e9a8b57fabb" class="wlWriterSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt;   &lt;div style="font-size: 10pt; border-top: #000080 1px solid; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; border-right: #000080 1px solid; border-bottom: #000080 1px solid; color: #000; border-left: #000080 1px solid"&gt;     &lt;div style="overflow: auto; padding-bottom: 2px; padding-top: 2px; padding-left: 5px; padding-right: 5px; background-color: #ffffff"&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;static&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;void&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; Main()&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// want to break out of a Parallel.For immediately when a condition occurs&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;var&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; cts = &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;new&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;CancellationTokenSource&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;var&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; po = &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;new&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;ParallelOptions&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;po.CancellationToken = cts.Token;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;long&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterTotal = 0;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;try&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// want to have a sum of counts at the end&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// using type param here to make counterSubtotal a long&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Parallel&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.For&amp;lt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;long&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;&amp;gt;(1, 26, po, () =&amp;gt; 0, &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;delegate&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;(&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;int&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; i, &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;ParallelLoopState&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; state, &lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;long&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterSubtotal)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(i.ToString());&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;// 1 billion&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;for&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;int&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; k = 0; k &amp;lt; 1000000000; k++)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #008000"&gt;//po.CancellationToken.ThrowIfCancellationRequested();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;if&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (po.CancellationToken.IsCancellationRequested)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterSubtotal;&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;counterSubtotal++;&lt;/span&gt;        &lt;br /&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;if&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (i == 4 &amp;amp;&amp;amp; k == 400000000)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;Inner Cancelled&amp;quot;&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;cts.Cancel();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;return&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterSubtotal;&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}, (x) =&amp;gt; &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Interlocked&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.Add(&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;ref&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; counterTotal, x)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #0000ff"&gt;catch&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; (&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;OperationCanceledException&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt; e)&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;{&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;Cancelled&amp;quot;&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;);&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;Total iterations across all threads {&lt;/span&gt;&lt;span style="background: #ffffff; color: #3cb371"&gt;0}&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;, &lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;String&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.Format(&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;{&lt;/span&gt;&lt;span style="background: #ffffff; color: #3cb371"&gt;0:n0}&lt;/span&gt;&lt;span style="background: #ffffff; color: #a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;, counterTotal));&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;&lt;/span&gt;&lt;span style="background: #ffffff; color: #2b91af"&gt;Console&lt;/span&gt;&lt;span style="background: #ffffff; color: #000000"&gt;.ReadLine();&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;        &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;span style="background: #ffffff; color: #000000"&gt;}&lt;/span&gt;&lt;/div&gt;   &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;and here is the coding challenge using tokens:&lt;/p&gt;  &lt;p&gt;To optimise this, Iâ€™d break up the chunks into smaller bits.&amp;#160; As a speed test, 750million comparisons per second is great.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Cancellation-Tokens_10B29/image_2.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Cancellation-Tokens_10B29/image_thumb.png" width="590" height="131" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:fb28234f-7f05-45a5-9f67-61eb779a8c9f" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;internal&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;private&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Main()&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; cts = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CancellationTokenSource&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; po = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;ParallelOptions&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â po.CancellationToken = cts.Token;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;long&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; counterTotal = 0;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; stopwatchOverall = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Stopwatch&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â stopwatchOverall.Start();&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;try&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Parallel&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.For&amp;lt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;long&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;gt;(97, 123, po, () =&amp;gt; 0, (i, state, counterSubtotal) =&amp;gt;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Starting &amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; + i);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// array of bytes (can be 0 to 255) eg 100, 97, 118, 101, 100, 97, 118&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] secretBytes = &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Encoding&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.UTF8.GetBytes(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;aavedave&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// same size array that we&amp;#39;ll populate many times to compare with&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; comparisonBytes = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[8];&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[0] = (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;) i;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; j = 97; j &amp;lt; 123; j++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[1] = j;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop 3&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; k = 97; k &amp;lt; 123; k++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[2] = k;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop4&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; l = 97; l &amp;lt; 123; l++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[3] = l;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop 5&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; m = 97; m &amp;lt; 123; m++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[4] = m;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop6&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; n = 97; n &amp;lt; 123; n++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[5] = n;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop7&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; o = 97; o &amp;lt; 123; o++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[6] = o;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//loop8&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;byte&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; p = 97; p &amp;lt; 123; p++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comparisonBytes[7] = p;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;if&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (po.CancellationToken.IsCancellationRequested)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Returning &amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; + i.ToString());&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;return&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; counterSubtotal;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â counterSubtotal++;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;bool&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; found = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;true&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;for&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; a = 0; a &amp;lt; 8; a++)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;if&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (comparisonBytes[a] != secretBytes[a])&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â found = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;break&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;if&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (found)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; comparisonString = &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Encoding&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.UTF8.GetString(comparisonBytes);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;var&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; secretString = &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Encoding&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.UTF8.GetString(secretBytes);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Comparison is {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; and secret is {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;1}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; after {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;2}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; pattern matches on this thread&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,comparisonString, secretString,&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;String&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Format(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;{&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0:n0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, counterSubtotal));&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Inner cancelled&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â cts.Cancel();&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â } &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//end loop 8&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â } &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//end loop 7&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â } &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 6&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â } &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 5&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â } &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//end loop 4&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â } &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 3&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â } &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// end loop 2&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;return&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; counterSubtotal;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â }, (x) =&amp;gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Interlocked&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Add(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;ref&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; counterTotal, x)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â );&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â }&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;catch&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;OperationCanceledException&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; e)&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Total counts on all threads is {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;String&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Format(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;{&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0:n0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, counterTotal));&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â stopwatchOverall.Stop();&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;TimeSpan&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; ts = stopwatchOverall.Elapsed;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Timespan: {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;s&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, ts.TotalSeconds);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;long&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; throughput = counterTotal/(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;long&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;) ts.TotalSeconds;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Throughput across all cores: {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;comparisons/sec&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;String&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Format(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;{&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0:n0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, throughput));&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â Â Â Â Â &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;End of program&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â Â Â Â Â }&lt;/span&gt;&lt;br&gt; &lt;span style="background:#ffffff;color:#000000"&gt;Â Â Â Â }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</Content>
      <Created>2013-05-01T15:07:56.0422359-04:00</Created>
      <Modified>2013-05-06T04:30:53.4332214-04:00</Modified>
      <EntryId>da5b177b-3742-4ebf-8414-23932600bc25</EntryId>
      <Description />
      <Title>Cancellation Tokens and Interlocked Add</Title>
      <Categories>Coding Challenge;Parallel</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>