<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2011-09-21T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;MVC3 Model binders are cool – form post can be structued into class, or method arguments.&lt;/p&gt;  &lt;p&gt;So we did have a test for the original ASP.NET Membership:&lt;/p&gt;  &lt;p&gt;Not looking for finite results, however testing the behaviour of the controller itself.&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:29c9bbaa-0420-42b3-a3e4-44d7624ac432" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;[&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpPost&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ActionResult&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Register(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;RegisterModel&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; model) {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (ModelState&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;IsValid) {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#66747b"&gt;// Attempt to register the user&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MembershipCreateStatus&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; createStatus;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Membership&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;CreateUser(model&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;UserName, model&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Password, model&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Email, &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#93c763"&gt;true&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#93c763"&gt;out&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; createStatus);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (createStatus &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;==&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MembershipCreateStatus&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Success) {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                    &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FormsAuthentication&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;SetAuthCookie(model&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;UserName, &lt;/span&gt;&lt;span style="color:#93c763"&gt;false&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#66747b"&gt;/* createPersistentCookie */&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                    &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RedirectToAction(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;else&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                    ModelState&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;AddModelError(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, ErrorCodeToString(createStatus));&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;// If we got this far, something failed, redisplay form&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; View(model);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;This test fails… Robs method of solving was to abstract out&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:bc3cbbb0-3826-400f-9ed0-17e69b98f1db" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; register_action_should_redirect_with_valid_email_pass() {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; controller &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;AccountController&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; controller&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Register(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;RegisterModel&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                Email &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;,&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                ConfirmPassword &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;,&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                Password &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;,&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                UserName &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            });&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;// if everything is okay in Register then it will call RedirectToActon which is a RedirectToRouteResult&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Assert&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;IsInstanceOf&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;RedirectToRouteResult&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(result);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;    &lt;p&gt;am getting a createStatus of InvalidAnswer if I run in nunit&lt;/p&gt;  &lt;p&gt;If I used the front end with exactly the same parameters it works fine.&lt;/p&gt;  &lt;h3&gt;Wiring up Custom Authentication&lt;/h3&gt;  &lt;p&gt;Changed AccountController from model binding &lt;/p&gt;  &lt;pre&gt; public ActionResult Register(RegisterModel model) {&lt;/pre&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;pre&gt;public ActionResult Register(string email, string password, string confirm) {&lt;/pre&gt;

&lt;pre&gt;&lt;font face="Arial"&gt;Either is fine, but this makes passing from our test easier:&lt;/font&gt;&lt;/pre&gt;

&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:672fa92f-c27e-4acd-9a06-f34c0eda4b4e" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;[&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; register_action_should_redirect_with_valid_email_pass() {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; controller &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;AccountController&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; controller&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Register(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;// if everything is okay in Register then it will call RedirectToActon which is a RedirectToRouteResult&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Assert&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;IsInstanceOf&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;RedirectToRouteResult&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(result);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;have wired up our new Users class Register method to handle registration:&lt;/p&gt;

&lt;p&gt;
  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:2d3c791f-b536-4f06-930f-7d723794490f" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;[&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpPost&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ActionResult&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Register(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; email, &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; password, &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; confirm) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _users&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Register(email, password, confirm);&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Success) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FormsAuthentication&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;SetAuthCookie(email, &lt;/span&gt;&lt;span style="color:#93c763"&gt;false&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#66747b"&gt;/* createPersistentCookie */&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RedirectToAction(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;else&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                ViewBag&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Message &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Message;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;// If we got this far, something failed, redisplay form&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; View();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;so just hands it off to Users.Register:&lt;/p&gt;

&lt;p&gt;
  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:a8dd8e7b-3792-45ba-9384-f3f314fb3fe3" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 500px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#66747b"&gt;// Have put in _db here instead of using base for simplicity.&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#66747b"&gt;//public class Users : DynamicModel {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Users&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#678cb1"&gt;DynamicModel&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _db;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Users() {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            _db &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;DynamicModel&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Membership&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Users&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;//public Users() : base(&amp;quot;VidPub&amp;quot;, &amp;quot;Users&amp;quot;, &amp;quot;ID&amp;quot;, &amp;quot;Email&amp;quot;) { }&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;dynamic&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Register(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; email, &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; password, &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; confirm) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;dynamic&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ExpandoObject&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Success &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;false&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (email&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Length &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ffcd22"&gt;6&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; password&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Length &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ffcd22"&gt;6&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; password&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Equals(confirm)) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;try&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                    &lt;/span&gt;&lt;span style="color:#66747b"&gt;//result.UserID = this.Insert(new { Email = email, HashedPassword = Hash(password) });&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                    result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;UserID &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _db&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Insert(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; { Email &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; email, HashedPassword &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Hash(password) });&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                    result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Success &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;true&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                    result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Message &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Thanks for signing up!&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;catch&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (&lt;/span&gt;&lt;span style="color:#678cb1"&gt;SqlException&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ex) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                    result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Message &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;This email already exists in our system&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;else&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                result&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Message &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Please check your email and password - they&amp;#39;re invalid&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Hash(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; userPassword) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#678cb1"&gt;BitConverter&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;ToString(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;SHA1Managed&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Create()&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;ComputeHash(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Encoding&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Default&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;GetBytes(userPassword)))&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Replace&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;                    (&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;However test fails with a nullReferenceException in FormsAuthentication.SetAuthCookie&lt;/p&gt;

&lt;h3&gt;Mocking – Moq.. Failed.. then Abstract out worked!&lt;/h3&gt;

&lt;p&gt;Forms authentication requires that certain classes and properties are setup just so for it to work.&lt;/p&gt;

&lt;p&gt;Just trying to set a cookie that has some encrypted data of user information.&lt;/p&gt;

&lt;p&gt;Need to fool the framework..&lt;/p&gt;

&lt;p&gt;Substituting own classes for what forms authentication needs:&lt;/p&gt;

&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:135de8cf-b5e4-4fab-aa7a-7926839eeec6" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 500px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestBase&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; SetContext(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Controller&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; controller) {&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; context &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Mock&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpContextBase&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; request &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Mock&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpRequestBase&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; response &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Mock&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpResponseBase&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; session &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Mock&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpSessionStateBase&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; server &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Mock&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpServerUtilityBase&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; user &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;GenericPrincipal&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;GenericIdentity&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;), &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;[&lt;/span&gt;&lt;span style="color:#ffcd22"&gt;0&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]);&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            context&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(ctx &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ctx&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Request)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(request&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Object);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            context&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(ctx &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ctx&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Response)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(response&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Object);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            context&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(ctx &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ctx&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Session)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(session&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Object);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            context&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(ctx &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ctx&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Server)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(server&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Object);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            context&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(ctx &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ctx&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;User)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(user);&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            request&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(r &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; r&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Cookies)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpCookieCollection&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;());&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            request&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(r &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; r&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Form)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;NameValueCollection&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;());&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            request&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(q &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; q&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;QueryString)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;NameValueCollection&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;());&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            response&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Setup(r &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; r&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Cookies)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Returns(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpCookieCollection&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;());&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; rctx &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;RequestContext&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(context&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Object, &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;RouteData&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;());&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            controller&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;ControllerContext &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ControllerContext&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(rctx, controller);&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;But this didn’t work.. so he’s going with an abstraction, so can test against this interface using a Fake.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set client access&lt;/li&gt;

  &lt;li&gt;Remove client access&lt;/li&gt;

  &lt;li&gt;Get the token&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:609c2536-e808-480a-8b26-75a426fe14a1" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 400px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FormsAuthTokenStore&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; : &lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ITokenHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; SetClientAccess(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; token) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FormsAuthentication&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;SetAuthCookie(token, &lt;/span&gt;&lt;span style="color:#93c763"&gt;true&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RemoveClientAccess() {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FormsAuthentication&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;SignOut();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; GetToken() {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FormsAuthentication&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Decrypt(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;HttpContext&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Current&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Response&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Cookies[&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;auth&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Value)&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;ToString();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;interface&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ITokenHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; GetToken();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RemoveClientAccess();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; SetClientAccess(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; token);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;the Fake:&lt;/p&gt;

&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:6197bb69-b781-4e59-af82-79f380bc1ebf" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeTokenStore&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; : &lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ITokenHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _token;&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; GetToken() {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _token;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RemoveClientAccess() {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            _token &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; SetClientAccess(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; token) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            _token &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; token;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;however MVC app won’t run now as it doesn’t know about tokenStore, and the framework will trying and inject something in for us.&lt;/p&gt;

&lt;p&gt;
  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:e8f25025-77c9-4326-96d4-087fa2f7fbf9" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;AccountController&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; : &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Controller&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Users&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _users;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ITokenHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _tokenStore;&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; AccountController(&lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ITokenHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; tokenStore) {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            _users &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Users&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            _tokenStore &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; tokenStore;&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;We’ve already got Ninject working, so lets just wire that up.&lt;/p&gt;

&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:8493e017-09be-4e0e-9dea-640b8f665246" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RegisterServices(&lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;IKernel&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; kernel)&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            kernel&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Bind&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ILogger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;()&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;To&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;NLogger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            kernel&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Bind&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ITokenHandler&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;()&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;To&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#678cb1"&gt;FormsAuthTokenStore&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Custom functionality: Only want to allow 1 person with an account to be logged in at a given time ie single session requirement&lt;/p&gt;

&lt;p&gt;The token is going to be a Guid.&lt;/p&gt;

&lt;h3&gt;Simulate 2 different users logging in at the same time.&lt;/h3&gt;

&lt;p&gt;ApplicationController – borrowing concept from Rails… all controllers inherit off ApplicationController, which provides an IsLoggedIn public property.&lt;/p&gt;

&lt;p&gt;Change AccountController to inherit from ApplicationController… just putting a class in the middle.&lt;/p&gt;

&lt;p&gt;taking the _tokenStore stuff out of AccountController and into it’s base class.&lt;/p&gt;

&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:d059f2d2-ac36-4ec9-9bb2-5b20f42c200e" class="wlWriterEditableSmartContent"&gt;
&lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt;
&lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; isloggedin_returns_false_for_first_user_on_dual_login() {&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;// we&amp;#39;ll need two controller instances here&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;// and a way to see if the user is logged in&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            _controller&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Register(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; _controller&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;LogOn(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Assert&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;True(_controller&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;IsLoggedIn);&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; c2 &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;AccountController&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeTokenStore&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;());&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            c2&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;LogOn(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//see if the first controller instance returns true for logged on&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Assert&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;False(_controller&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;IsLoggedIn);&lt;/span&gt;&lt;br&gt;
&lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;So first user is logged out if second user comes in with same credentials.&lt;/p&gt;

&lt;h3&gt;GIT&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/image_2.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/image_thumb.png" width="648" height="336" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cd ..&lt;/p&gt;

&lt;p&gt;git status&lt;/p&gt;

&lt;p&gt;git commit –am “got token based authentication working&lt;/p&gt;

&lt;p&gt;git checkout master&lt;/p&gt;

&lt;p&gt;git merge membership – merges the membership branch with the master&lt;/p&gt;

&lt;p&gt;git push origin master&lt;/p&gt;

&lt;p&gt;git checkout membership&amp;#160; - switch back to membership branch.&lt;/p&gt;

&lt;h3&gt;Review&lt;/h3&gt;

&lt;p&gt;Testing – started with it.. good&lt;/p&gt;

&lt;p&gt;Logon&lt;/p&gt;

&lt;p&gt;Registration&lt;/p&gt;

&lt;p&gt;But framework got in the way.&lt;/p&gt;

&lt;p&gt;SQLCE was good (not for me)&lt;/p&gt;

&lt;p&gt;Massive was good&lt;/p&gt;

&lt;p&gt;A beautiful application: “Reads well, simple to understand, and gets the job done”&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/image_4.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/image_thumb_1.png" width="507" height="469" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rob doesn’t like this as lots of repetition.. and why not have it expressed more simply ie in the Users class.&lt;/p&gt;

&lt;pre&gt;if (email.Length &amp;gt;= 6 &amp;amp;&amp;amp; password.Length &amp;gt;= 6 &amp;amp;&amp;amp; password.Equals(confirm)) {&lt;/pre&gt;

&lt;p&gt;A rough sketch of where we are now&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/Image0420_2.jpg"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="Image0420" border="0" alt="Image0420" src="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/Image0420_thumb.jpg" width="580" height="772" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/image_6.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/VidPub-2.1_A261/image_thumb_2.png" width="340" height="834" /&gt;&lt;/a&gt;&lt;/p&gt;</Content>
      <Created>2011-09-22T00:49:18.747-04:00</Created>
      <Modified>2011-09-22T00:49:18.747-04:00</Modified>
      <EntryId>ad8ce812-284e-41e9-93a0-c611bdc5df71</EntryId>
      <Description />
      <Title>VidPub 2.1 Membership</Title>
      <Categories>MVC;VidPub</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>