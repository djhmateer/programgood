<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2010-12-29T19:00:00-05:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;Work out the first ten digits of the sum of the following one-hundred 50-digit numbers. (see project Euler!)&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.csharp-station.com/Tutorials/Lesson02.aspx"&gt;http://www.csharp-station.com/Tutorials/Lesson02.aspx&lt;/a&gt;&lt;/p&gt;  &lt;table border="0" cellspacing="0" cellpadding="0" width="539"&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td width="64"&gt;Type&lt;/td&gt;        &lt;td width="64"&gt;Size (in bits)&lt;/td&gt;        &lt;td width="409"&gt;Range&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;sbyte&lt;/td&gt;        &lt;td width="64"&gt;8&lt;/td&gt;        &lt;td width="409"&gt;-128 to 127&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;byte&lt;/td&gt;        &lt;td width="64"&gt;8&lt;/td&gt;        &lt;td width="409"&gt;0 to 255&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;short&lt;/td&gt;        &lt;td width="64"&gt;16&lt;/td&gt;        &lt;td width="409"&gt;-32768 to 32767&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;ushort&lt;/td&gt;        &lt;td width="64"&gt;16&lt;/td&gt;        &lt;td width="409"&gt;0 to 65535&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;int&lt;/td&gt;        &lt;td width="64"&gt;32&lt;/td&gt;        &lt;td width="409"&gt;-2147483648 to 2147483647&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;uint&lt;/td&gt;        &lt;td width="64"&gt;32&lt;/td&gt;        &lt;td width="409"&gt;0 to 4294967295&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;long&lt;/td&gt;        &lt;td width="64"&gt;64&lt;/td&gt;        &lt;td width="409"&gt;-9223372036854775808 to 9223372036854775807&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;ulong&lt;/td&gt;        &lt;td width="64"&gt;64&lt;/td&gt;        &lt;td width="409"&gt;0 to 18446744073709551615&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td width="64"&gt;char&lt;/td&gt;        &lt;td width="64"&gt;16&lt;/td&gt;        &lt;td width="409"&gt;0 to 65535&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;  &lt;p&gt;or in .NET4 System.Numerics.BigInteger.. remember to add the reference first, then put in the using statement.&lt;/p&gt;  &lt;p&gt;My first try was using BigInteger :-)&lt;/p&gt;  &lt;div id="codeSnippetWrapper"&gt;   &lt;pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px" id="codeSnippet"&gt;[TestClass]&lt;br /&gt;&lt;span style="color: #0000ff"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff"&gt;class&lt;/span&gt; UnitTest1&lt;br /&gt;{&lt;br /&gt;    [TestMethod]&lt;br /&gt;    &lt;span style="color: #0000ff"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff"&gt;void&lt;/span&gt; TestMethod1()&lt;br /&gt;    {&lt;br /&gt;        &lt;span style="color: #0000ff"&gt;string&lt;/span&gt; csvStringOfNumbers = &lt;span style="color: #006080"&gt;&amp;quot;37107287533902102798797998220837590246510135740250,&amp;quot;&lt;/span&gt; +&lt;br /&gt;&lt;span style="color: #006080"&gt;&amp;quot;46376937677490009712648124896970078050417018260538,&amp;quot;&lt;/span&gt; +&lt;br /&gt;        &lt;span style="color: #0000ff"&gt;string&lt;/span&gt;[] numbers = csvStringOfNumbers.Split(&lt;span style="color: #006080"&gt;','&lt;/span&gt;);&lt;br /&gt;        BigInteger number = 0;&lt;br /&gt;        BigInteger sum = 0;&lt;br /&gt;        &lt;span style="color: #0000ff"&gt;for&lt;/span&gt; (&lt;span style="color: #0000ff"&gt;int&lt;/span&gt; i = 0; i &amp;lt; 100; i++)&lt;br /&gt;        {&lt;br /&gt;            number = BigInteger.Parse(numbers[i]);&lt;br /&gt;            sum += number;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        &lt;span style="color: #0000ff"&gt;string&lt;/span&gt; sumAsString = sum.ToString();&lt;br /&gt;        &lt;span style="color: #0000ff"&gt;string&lt;/span&gt; firstTen = sumAsString.Substring(0, 10);&lt;br /&gt;&lt;br /&gt;        Assert.AreEqual(1, firstTen);&lt;br /&gt;    }&lt;/pre&gt;
&lt;/div&gt;</Content>
      <Created>2010-12-29T21:14:09.503625-05:00</Created>
      <Modified>2010-12-30T14:45:23.909875-05:00</Modified>
      <EntryId>b8fe9253-a862-4ba8-8fa4-8ea099b585ee</EntryId>
      <Description />
      <Title>Euler #13 - BigInteger</Title>
      <Categories>Euler</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>