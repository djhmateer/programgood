<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-07-11T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;Trying CodeAnalysis&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Euler-53_F0CE/image_2.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Euler-53_F0CE/image_thumb.png" width="491" height="195" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Interesting suggestions.&amp;#160; I quite like using a in the factorial method.&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:2149ed7d-694a-4e99-8192-d3d931919422" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 400px; overflow: auto; padding: 2px 5px;"&gt;[&lt;span style="color:#2b91af"&gt;TestFixture&lt;/span&gt;]&lt;br&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;E53Tests&lt;/span&gt;&lt;br&gt; {&lt;br&gt;     [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; Factorial_Given_Then()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;E53&lt;/span&gt;.Factorial(3);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(&lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(6), result);&lt;br&gt;         result = &lt;span style="color:#2b91af"&gt;E53&lt;/span&gt;.Factorial(4);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(&lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(24), result);&lt;br&gt;         result = &lt;span style="color:#2b91af"&gt;E53&lt;/span&gt;.Factorial(5);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(&lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(120), result);&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; MethodUnderTest_scenario_expectedbehaviour()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;E53&lt;/span&gt;.HowManyWaysToGetrFromnDigits(3,5);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(&lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(10), result);&lt;br&gt;         result = &lt;span style="color:#2b91af"&gt;E53&lt;/span&gt;.HowManyWaysToGetrFromnDigits(2, 5);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(&lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(10), result);&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; HowManyValuesGreaterThan1m_Given_ReturnCount()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;E53&lt;/span&gt;.HowManyValuesGreaterThan1m();&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(4075, result);&lt;br&gt;     }&lt;br&gt; }&lt;br&gt; &lt;br&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;E53&lt;/span&gt;&lt;br&gt; {&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; HowManyValuesGreaterThan1m()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; list = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;&amp;gt;();&lt;br&gt;         &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; n = 1; n &amp;lt;= 100; n++)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; r = 1; r &amp;lt;= n; r++)&lt;br&gt;             {&lt;br&gt;                 &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; result = HowManyWaysToGetrFromnDigits(r, n);&lt;br&gt;                 &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (result &amp;gt; 1000000)&lt;br&gt;                 {&lt;br&gt;                     list.Add(result);&lt;br&gt;                 }&lt;br&gt;             }&lt;br&gt;         }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; list.Count;&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; HowManyWaysToGetrFromnDigits(&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; r, &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; n)&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; top = Factorial(n);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; bracket = Factorial(n - r);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; bottom = Factorial(r)*bracket;&lt;br&gt;         &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; result = top/bottom;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; result;&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; Factorial(&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; a)&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (a == 0) &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; 1;&lt;br&gt;         &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; number = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(a);&lt;br&gt;         &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; i = a-1; i &amp;gt; 1; i--)&lt;br&gt;         {&lt;br&gt;             number = number * i;&lt;br&gt;         }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; number;&lt;br&gt;     }&lt;br&gt; }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;ul&gt;   &lt;li&gt;TDD helped get the answer right the first time&lt;/li&gt;    &lt;li&gt;Interesting to explore FX Cop (Code Analysis) suggestions.&lt;/li&gt; &lt;/ul&gt;</Content>
      <Created>2012-07-12T17:28:26.8550741-04:00</Created>
      <Modified>2012-07-12T17:28:26.8550741-04:00</Modified>
      <EntryId>0972ec9b-ba49-4159-addb-85cde6bfafcb</EntryId>
      <Description />
      <Title>Euler 53</Title>
      <Categories>Euler</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>