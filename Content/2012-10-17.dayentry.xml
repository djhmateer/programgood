<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-10-16T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;ul&gt;   &lt;li&gt;DataGrid (SL2) is most often used&lt;/li&gt;    &lt;li&gt;DataForm (SL3)..like a grid rotated 90degrees&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_2.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_thumb.png" width="444" height="382" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&amp;lt;Grid x:Name=&amp;quot;LayoutRoot&amp;quot; Margin=&amp;quot;15&amp;quot;&amp;gt;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;data:DataGrid x:Name=&amp;quot;myDataGrid&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;lt;/Grid&amp;gt;    &lt;br /&gt;&lt;/p&gt;  &lt;p&gt;AutoGenerateColumns property default to true.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_4.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_thumb_1.png" width="377" height="180" /&gt;&lt;/a&gt;    &lt;br /&gt;DataGrid can support millions of rows of data. – UI Virtualisation&lt;/p&gt;  &lt;h3&gt;Customising the Rows&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_6.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_thumb_2.png" width="346" height="238" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_8.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_thumb_3.png" width="580" height="282" /&gt;&lt;/a&gt;    &lt;br /&gt;Using a template to show details when selected.&lt;/p&gt;    &lt;p&gt;Can use HeadersVisibility=&amp;quot;All&amp;quot; property to show vertical ‘header’ too.&lt;/p&gt;  &lt;h3&gt;DataGrid Sorting&lt;/h3&gt;  &lt;p&gt; &amp;lt;data:DataGridTextColumn Binding=&amp;quot;{Binding Name, Mode=OneWay}&amp;quot; Header=&amp;quot;Name&amp;quot; SortMemberPath=&amp;quot;Name&amp;quot;/&amp;gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;DataForm&lt;/h3&gt;  &lt;p&gt;Can be thought of as a single row grid turned on its side.&amp;#160; Can do similar things:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Readonly or editable&lt;/li&gt;    &lt;li&gt;Infer column names&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_10.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_thumb_4.png" width="373" height="239" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_12.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_thumb_5.png" width="377" height="449" /&gt;&lt;/a&gt;    &lt;br /&gt;Validation coming via DataAnnotations.&amp;#160; ‘VCR’ controls ie CommandButtons which includes Add, Cancel, Commit, Del, Edit, Navigation or None.&amp;#160; Controls are inferred from type.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_14.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Data-Controls---Ch7_D4B3/image_thumb_6.png" width="402" height="228" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&amp;lt;UserControl.Resources&amp;gt;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;local:PeopleRepository x:Key=&amp;quot;repository&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160; &amp;lt;/UserControl.Resources&amp;gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&amp;#160; &amp;lt;Grid x:Name=&amp;quot;LayoutRoot&amp;quot; Margin=&amp;quot;30&amp;quot;&amp;gt;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;toolkit:DataForm DataContext=&amp;quot;{StaticResource repository}&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; CommandButtonsVisibility=&amp;quot;All&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; ItemsSource=&amp;quot;{Binding People}&amp;quot;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; CurrentIndex=&amp;quot;0&amp;quot;&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/toolkit:DataForm&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160; &amp;lt;/Grid&amp;gt;&lt;/p&gt;  &lt;p&gt;One of the easiest things to do is to supplyl and ObservableCollection&amp;lt;T&amp;gt; to the ItemsSource property of the DataForm.&lt;/p&gt;</Content>
      <Created>2012-10-17T10:50:46.8033844-04:00</Created>
      <Modified>2012-10-17T10:50:46.8033844-04:00</Modified>
      <EntryId>abcfff76-c4ee-4459-82cf-1077abdc2b90</EntryId>
      <Description />
      <Title>Silverlight Data Controls - Ch7</Title>
      <Categories>Silverlight</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;p&gt;Binding is a powerful way to create a connection between the UI and source of data&lt;/p&gt;  &lt;p&gt;Can create a binding using two different approaches:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Dynamically create a binding at runtime&lt;/li&gt;    &lt;li&gt;Specify a binding at design time&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;1) RunTime&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_2.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb.png" width="421" height="287" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&amp;lt;Grid x:Name=&amp;quot;LayoutRoot&amp;quot; Background=&amp;quot;White&amp;quot;&amp;gt;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBox x:Name=&amp;quot;myTextBox&amp;quot;&amp;gt;&amp;lt;/TextBox&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160; &amp;lt;/Grid&amp;gt;    &lt;br /&gt;&lt;/p&gt;  &lt;p&gt;2) Design time (more often used)&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_4.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_1.png" width="392" height="133" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;TImeOfDay is a property of the DateTime class, just like Date and Now.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_6.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_2.png" width="244" height="74" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_8.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_3.png" width="409" height="117" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_10.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_4.png" width="411" height="121" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_12.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_5.png" width="294" height="97" /&gt;&lt;/a&gt;    &lt;br /&gt;A simpler example showing binding to a dateTime object.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/2430664/current-date-in-silverlight-xaml-textblock"&gt;http://stackoverflow.com/questions/2430664/current-date-in-silverlight-xaml-textblock&lt;/a&gt; – getting the time updating… couldn’t get it to work.&lt;/p&gt;  &lt;h3&gt;Binding Mode&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;OneTime – any changes made to the source wont be automatically sent to the target&lt;/li&gt;    &lt;li&gt;OneWay – default.&amp;#160; Can automatically receive changes from a source property&lt;/li&gt;    &lt;li&gt;TwoWay – two way eg CRUD data&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Binding&amp;#160; has a:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Source&lt;/li&gt;    &lt;li&gt;Target – typically a UI element&lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Binding to a Property&lt;/h3&gt;  &lt;p&gt;Can bind to any CLR property&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_14.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_6.png" width="546" height="372" /&gt;&lt;/a&gt;    &lt;br /&gt;If this was TwoWay binding we would see the Name end if fffff.&lt;/p&gt;  &lt;p&gt;To update the target, must create a change-notification handler which must implement INotifyPropertyChanged&lt;/p&gt;  &lt;h3&gt;Binding to an Object&lt;/h3&gt;  &lt;p&gt;If want to bind multiple properties to a UI then it becomes tedious (as shown in commented out DataContexts below).&amp;#160; So we can use the DataContext property on a parent.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_16.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_7.png" width="547" height="343" /&gt;&lt;/a&gt;    &lt;br /&gt;DataContext set on the parent Grid in code&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_18.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_8.png" width="543" height="411" /&gt;&lt;/a&gt;    &lt;br /&gt;Tool friendly way of setting DataContext in XAML.&amp;#160; No code behind DataContext&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_20.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_9.png" width="545" height="263" /&gt;&lt;/a&gt;    &lt;br /&gt;Object is instantiated in XAML.&amp;#160; Remember to create a parameterless constructor on emoticon&lt;/p&gt;  &lt;p&gt;To reference the object in XAML via code:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_32.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_15.png" width="511" height="200" /&gt;&lt;/a&gt;    &lt;br /&gt;Name my UserControl – eg Example&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_34.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_16.png" width="515" height="113" /&gt;&lt;/a&gt;    &lt;br /&gt;Then use .Resources to get at the XAML created object. (see EmoticonExample)&lt;/p&gt;  &lt;h3&gt;Binding to a UI Element&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_22.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_10.png" width="356" height="142" /&gt;&lt;/a&gt;    &lt;br /&gt;Counts the number of characters written.&lt;/p&gt;  &lt;p&gt;Use ElementBinding (SL3)..allows us to bind properties of one framework element to another.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;StackPanel&lt;/li&gt;    &lt;li&gt;TextBlock – label&lt;/li&gt;    &lt;li&gt;TextBox – called tweetText&lt;/li&gt;    &lt;li&gt;TextBlock – bound to tweetText.Text.Length&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;lt;Grid x:Name=&amp;quot;LayoutRoot&amp;quot; Background=&amp;quot;White&amp;quot;&amp;gt;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;StackPanel Orientation=&amp;quot;Vertical&amp;quot; Margin=&amp;quot;50&amp;quot;&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBlock Text=&amp;quot;Tweet (max 140 characters)&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBox x:Name=&amp;quot;tweetText&amp;quot;&amp;#160; MaxLength=&amp;quot;140&amp;quot; Text=&amp;quot;Right now I'm writing a book&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;StackPanel Orientation=&amp;quot;Horizontal&amp;quot;&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBlock Text=&amp;quot;{Binding Text.Length, ElementName=tweetText}&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBlock Text=&amp;quot;/&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBlock Text=&amp;quot;{Binding MaxLength, ElementName=tweetText}&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/StackPanel&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/StackPanel&amp;gt;    &lt;br /&gt; &amp;lt;/Grid&amp;gt;    &lt;br /&gt;&lt;/p&gt;  &lt;h3&gt;Relative Source Binding&lt;/h3&gt;  &lt;p&gt;Should be used sparingling as hard to debug.&amp;#160; Here we are binding an element to itself.&lt;/p&gt;  &lt;p&gt;public partial class MainPage : UserControl   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; {    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; public MainPage()    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; {    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; InitializeComponent();    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }&lt;/p&gt;  &lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; private string _pageTitle = &amp;quot;Silverlight 5 in Action&amp;quot;;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; public string PageTitle    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; {    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; get { return _pageTitle; }    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; set { _pageTitle = value; }    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; }&lt;/p&gt;  &lt;p&gt;&amp;#160;&amp;#160;&amp;#160; }&lt;/p&gt;  &lt;p&gt;&amp;lt;UserControl x:Class=&amp;quot;RelativeSourceExample.MainPage&amp;quot;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; xmlns=&amp;quot;&lt;a href="http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;"&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; xmlns:x=&amp;quot;&lt;a href="http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;"&gt;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; xmlns:d=&amp;quot;&lt;a href="http://schemas.microsoft.com/expression/blend/2008&amp;quot;"&gt;http://schemas.microsoft.com/expression/blend/2008&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; xmlns:mc=&amp;quot;&lt;a href="http://schemas.openxmlformats.org/markup-compatibility/2006&amp;quot;"&gt;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; mc:Ignorable=&amp;quot;d&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; d:DesignHeight=&amp;quot;300&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; d:DesignWidth=&amp;quot;400&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; DataContext=&amp;quot;{Binding RelativeSource={RelativeSource Self}}&amp;quot; Margin=&amp;quot;0,-3,0,3&amp;quot;&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;Grid x:Name=&amp;quot;LayoutRoot&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; Background=&amp;quot;White&amp;quot;&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBlock Name=&amp;quot;myTextBlock&amp;quot; Text=&amp;quot;{Binding PageTitle}&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/Grid&amp;gt;&lt;/p&gt;  &lt;p&gt;&amp;lt;/UserControl&amp;gt;   &lt;br /&gt;&lt;/p&gt;  &lt;h3&gt;Binding to an Indexed Element&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_24.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_11.png" width="546" height="128" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_26.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_12.png" width="480" height="317" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Binding using a string Key&lt;/h3&gt;  &lt;p&gt;Using a Dictionary&amp;lt;string, Emoticon&amp;gt; and referencing the string in the binding:&lt;/p&gt;  &lt;p&gt;&amp;lt;UserControl x:Class=&amp;quot;EmoticonExample.MainPage&amp;quot;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; xmlns=&amp;quot;&lt;a href="http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;"&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; xmlns:x=&amp;quot;&lt;a href="http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;"&gt;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; xmlns:d=&amp;quot;&lt;a href="http://schemas.microsoft.com/expression/blend/2008&amp;quot;"&gt;http://schemas.microsoft.com/expression/blend/2008&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; xmlns:mc=&amp;quot;&lt;a href="http://schemas.openxmlformats.org/markup-compatibility/2006&amp;quot;"&gt;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;quot;&lt;/a&gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; mc:Ignorable=&amp;quot;d&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; xmlns:local=&amp;quot;clr-namespace:EmoticonExample&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; d:DesignHeight=&amp;quot;300&amp;quot;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; d:DesignWidth=&amp;quot;400&amp;quot;&amp;gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;UserControl.Resources&amp;gt;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;local:Repository x:Key=&amp;quot;repository&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/UserControl.Resources&amp;gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;Grid x:Name=&amp;quot;LayoutRoot&amp;quot;   &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; DataContext=&amp;quot;{StaticResource repository}&amp;quot;&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;StackPanel Width=&amp;quot;100&amp;quot; HorizontalAlignment=&amp;quot;Center&amp;quot;&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;Image Source=&amp;quot;{Binding Emoticons[Smiley].Icon}&amp;quot; Stretch=&amp;quot;None&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;TextBlock Text=&amp;quot;{Binding Emoticons[Smiley].Name}&amp;quot; /&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/StackPanel&amp;gt;    &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/Grid&amp;gt;    &lt;br /&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_28.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_13.png" width="509" height="292" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Binding to an Entire Collection&lt;/h3&gt;  &lt;p&gt;myListBox.ItemsSource – can be used to bind any collection that supports IEnumerable&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_30.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Ch16-Binding_9471/image_thumb_14.png" width="515" height="302" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Binding to Dynamic Properties&lt;/h3&gt;  &lt;p&gt;Stronly typed return values from services on the net its not always possible to have classes defined at compile time, so can use ICustomTypeProvider and Refelection to help.&lt;/p&gt;</Content>
      <Created>2012-10-17T09:04:12.586475-04:00</Created>
      <Modified>2012-10-17T09:48:04.2590425-04:00</Modified>
      <EntryId>a1faa8c5-429a-4791-897c-10ca6d0015c1</EntryId>
      <Description />
      <Title>Silverlight Ch16 Binding</Title>
      <Categories>Silverlight</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Part-3Working-with-Data-and-Services_EFFA/image_2.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Part-3Working-with-Data-and-Services_EFFA/image_thumb.png" width="244" height="216" /&gt;&lt;/a&gt;    &lt;br /&gt;Ch25 – Creating images &lt;/p&gt;  &lt;p&gt;Ch28 – pop-ups, windows and full screen apps.&lt;/p&gt;  &lt;p&gt;Ch29 – Navigation template&lt;/p&gt;</Content>
      <Created>2012-10-17T04:36:36.9454972-04:00</Created>
      <Modified>2012-10-17T04:36:36.9454972-04:00</Modified>
      <EntryId>169cb113-1080-4a56-9d57-3cbccc3caa5a</EntryId>
      <Description />
      <Title>Part 3–Working with Data and Services</Title>
      <Categories>Silverlight</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;ul&gt;   &lt;li&gt;Exception based validation capabilities are not the way to go.&lt;/li&gt;    &lt;li&gt;IDataErrorInfo and INotifyDataErrorInfo are the ways forward (SL4)&lt;/li&gt;    &lt;li&gt;DataAnnotations are geared to work with DataGrid and DataForm&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;source code is missing for this chapter&lt;/p&gt;</Content>
      <Created>2012-10-17T11:55:12.8238557-04:00</Created>
      <Modified>2012-10-17T11:55:12.8238557-04:00</Modified>
      <EntryId>c74acb1a-6378-4f04-89d5-69402618f8ed</EntryId>
      <Description />
      <Title>Silverlight Input Validation  - Ch 18</Title>
      <Categories>Silverlight</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>