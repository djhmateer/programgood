<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2011-12-27T19:00:00-05:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;Delegates – “they encapsulate a bit of behaviour”.. Initally from Jon Skeets Tekpub videos:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:4144e09e-e3e2-469b-b37f-c20cf212f26a" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Int32Action&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; value);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Delegates&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RandomRob(&lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; value)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Delegate implementation: {&lt;/span&gt;&lt;span style="color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, value);  &lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;//static means related to the type rather than any specific instance of the type&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; StaticRob(&lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; value)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Static method: {&lt;/span&gt;&lt;span style="color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, value);  &lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;and calling:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:835a63fd-5d64-4363-8f4e-884154a8a4ce" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; SimpleDelegateFromMethod()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Delegates&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; target &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Delegates&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//C#1 syntax&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Int32Action&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; action &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Int32Action&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(target&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;RandomRob);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//same.. calling the delegate which has been setup to be target.RandomRob&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            action&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(&lt;/span&gt;&lt;span style="color:#ffcd22"&gt;5&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            action(&lt;/span&gt;&lt;span style="color:#ffcd22"&gt;6&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; DelegateFromStaticMethod()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Int32Action&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; action &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Int32Action&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Delegates&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;StaticRob);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            action&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(&lt;/span&gt;&lt;span style="color:#ffcd22"&gt;7&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;Events&lt;/h3&gt;  &lt;p&gt;Observer pattern.&lt;/p&gt;  &lt;p&gt;Here we are using pub/sub without events:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:44b258ad-e152-41fe-a4f5-cbcad7fdc178" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 500px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestFixture&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventRaiserTest&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ReportToConsole(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; text)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Called: {&lt;/span&gt;&lt;span style="color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, text);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RaiseEvents()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//C#1&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//FakeEventHandler handler = new FakeEventHandler(ReportToConsole);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//C#2 - implicit method group conversions&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ReportToConsole;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventRaiser&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; raiser &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventRaiser&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;DoSomething(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Not subscribed&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;AddHandler(handler);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;DoSomething(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Subscribed&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;AddHandler(handler);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;DoSomething(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Subscribed twice&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;RemoveHandler(handler);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;RemoveHandler(handler);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;DoSomething(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Unsubscribed&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;asdf&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:f5d92c1b-a498-4f3b-abee-3017e5ba2101" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventRaiser&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; AddHandler(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RemoveHandler(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;-&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; DoSomething(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; text)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; tmp &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(text);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;h3&gt;Longhand EventRaiser:&lt;/h3&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:5484acbb-bc1e-4e78-bf7e-18e6ddaf03c3" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestFixture&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LonghandEventRaiserTest&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ReportToConsole(&lt;/span&gt;&lt;span style="color:#93c763"&gt;object&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; sender, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;EventArgs&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; e)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;ReportToConsole was called&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RaiseEvents()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//C#1&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//FakeEventHandler handler = new FakeEventHandler(ReportToConsole);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//C#2 - implicit method group conversions&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ReportToConsole;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;var&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; raiser &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LonghandEventRaiser&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;OnClick(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Not subscribed&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Click &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;OnClick(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Subscribed&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Click &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;OnClick(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Subscribed twice&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Click &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;-=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Click &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;-=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            raiser&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;OnClick(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Unsubscribed&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;asdf&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:92ecc61f-0ff3-416d-8bd0-efba25ac3b86" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#93c763"&gt;namespace&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; MasteringCSharp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Tests&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;{&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;object&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; sender, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;EventArgs&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; e);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LonghandEventRaiser&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; AddHandler(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RemoveHandler(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;-&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; OnClick(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; text)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; tmp &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(&lt;/span&gt;&lt;span style="color:#93c763"&gt;this&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;EventArgs&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Empty);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        } &lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;event&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Click&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;add&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; { AddHandler(&lt;/span&gt;&lt;span style="color:#93c763"&gt;value&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);}&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;remove&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {RemoveHandler(&lt;/span&gt;&lt;span style="color:#93c763"&gt;value&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);}&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;}&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;but can simplify..fairly simple implementation of the observer pattern:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:d8816738-7241-4516-b8a4-7fbbb8da9398" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;object&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; sender, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;EventArgs&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; e);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LonghandEventRaiser&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; OnClick(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; text)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; tmp &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(&lt;/span&gt;&lt;span style="color:#93c763"&gt;this&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;EventArgs&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Empty);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        } &lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;event&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Click&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;add&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; { currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;value&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;; }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;remove&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; {currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;-=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;value&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;}&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;but we can do better!&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:e100818e-457d-4de4-a278-8e44907d598e" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; OnClick(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; text)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//Click refers to the field which is auto genned&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; tmp &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Click;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(&lt;/span&gt;&lt;span style="color:#93c763"&gt;this&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;EventArgs&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Empty);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;//declared with a field like event&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;event&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;ClickHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Click;&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;Other Ways of thinking of Delegates and Events&lt;/h3&gt;  &lt;p&gt;“An &lt;i&gt;event&lt;/i&gt; in C# is a way for a class to provide notifications to clients of that class when some interesting thing happens to an object”&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.akadia.com/services/dotnet_delegates_and_events.html"&gt;http://www.akadia.com/services/dotnet_delegates_and_events.html&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Calling a function directly:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:cc49ef0f-610b-4b77-baa7-7c75b55da036" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Program&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Main(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;[] args)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; mc &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; result &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; mc&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Process();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(result);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Process()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;In Process&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;h3&gt;Basic Delegate&lt;/h3&gt;  &lt;p&gt;Sometimes we don’t want to call a function directly – we’d like to pass it to somebody else so they can call it.&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:31a0f137-df25-4fba-85b4-0994e9fbe089" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Program&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; s);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Main(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;[] args)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; consoleLog &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(ConsoleLoggerFunction);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            consoleLog&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            consoleLog(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Another way&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ConsoleLoggerFunction(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; s)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Message is: {&lt;/span&gt;&lt;span style="color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, s);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;h3&gt;Calling Static Functions&lt;/h3&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:6fee9625-2c87-49d7-a615-04ae1e86f439" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Program&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Main(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;[] args)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; p &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; logger &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(Logger);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//implicit method group conversion&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//Person.LogDelegate logger = Logger;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            p&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Process(logger);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Logger(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; message)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(message);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; message);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Process(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; logDelegate)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (logDelegate &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                logDelegate&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Doing stuff&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;and then use a FakeLogger in tests:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:84964445-03f1-4dcf-b238-bed0f70aad02" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Process_WhenCalled_ShouldWriteToLogPassedIntoDelegate()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; p &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; logDelegate &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogDelegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(FakeLogger);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            p&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Process(logDelegate);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; FakeLogger(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; message)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;FakeLogger: {&lt;/span&gt;&lt;span style="color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, message);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;or could have simply used an interface:&lt;/p&gt;  &lt;p&gt;******below is just for reference****** actually in the interest of keeping things simple, am going to go for more of an interface style in my TDD/Logging strategy as eventing can get complex quickly.&lt;/p&gt;  &lt;h3&gt;Calling Member Functions&lt;/h3&gt;  &lt;p&gt;hmm – could be better&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:73116214-7e7c-4719-aa51-249b9b861516" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#93c763"&gt;internal&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;//takes a single string parameter and no return type&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; message);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Process(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; lh)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (lh &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                lh(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Process() begin&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (lh &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                lh(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Process() end&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#66747b"&gt;// The FileLogger class merely encapsulates the file I/O&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileLogger&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileStream&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; fileStream;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StreamWriter&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; streamWriter;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;// Constructor&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; FileLogger(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; filename)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            fileStream &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileStream&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(filename, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileMode&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Create);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            streamWriter &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StreamWriter&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(fileStream);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;// Member Function which is used in the Delegate&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Logger(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; s)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            streamWriter&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(s);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Close()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            streamWriter&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Close();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            fileStream&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Close();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestApplication&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Main(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;[] args)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; fl &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;process.log&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; mc &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; myLogger &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;MyClass&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(fl&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Logger);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            mc&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Process(myLogger);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            fl&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Close();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;h3&gt;Events&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;Publishers &lt;/li&gt;    &lt;li&gt;Subscribers &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; want a simple example of a logger using events - &lt;a href="http://stackoverflow.com/questions/8663736/delegate-and-events-architecture-with-a-logger"&gt;http://stackoverflow.com/questions/8663736/delegate-and-events-architecture-with-a-logger&lt;/a&gt;&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:1c99e0bf-8c8e-4af7-af8f-72c9c732487a" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;//takes a single string parameter and no return type&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; message);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;// Define an Event based on the above Delegate&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;event&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Log;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;//call the event using OnXXX where XXX is the name of the event&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Process()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            OnLog(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Process() begin&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            OnLog(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;Process() end&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;protected&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; OnLog(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; message)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (Log &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                Log(message);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileLogger&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileStream&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; fileStream;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StreamWriter&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; streamWriter;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; FileLogger(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; filename)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            fileStream &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileStream&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(filename, &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileMode&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Create);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            streamWriter &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StreamWriter&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(fileStream);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#66747b"&gt;// Member Function which is used in the Delegate&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Logger(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; s)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            streamWriter&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(s);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Close()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            streamWriter&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Close();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            fileStream&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Close();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestApplication&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; ConsoleLogger(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; s)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Console&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WriteLine(s);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Main(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;[] args)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; fl &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FileLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;process.log&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; person &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;// Subscribe the Functions ConsoleLogger and fl.ConsoleLogger&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Log &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(ConsoleLogger);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Log &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#678cb1"&gt;LogHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(fl&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Logger);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            person&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Process();&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            fl&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Close();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;and then:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:3a54cef0-5366-4178-84e4-46d49c76fbf4" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;delegate&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; reason);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventRaiser&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; AddHandler(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;+&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; RemoveHandler(&lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;-&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; handler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; DoSomething(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; text)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeEventHandler&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; tmp &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; currentHandler;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;!=&lt;/span&gt;&lt;span style="color:#93c763"&gt;null&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                tmp&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Invoke(text);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</Content>
      <Created>2011-12-28T18:14:16.3055-05:00</Created>
      <Modified>2011-12-29T21:02:09.14925-05:00</Modified>
      <EntryId>c097ef51-d45b-4e60-b7f4-1955a6cf3583</EntryId>
      <Description />
      <Title>Delegates and Events</Title>
      <Categories>Events;Events and Delegates</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;p&gt;Interaction tests.. ie interaction between objects..usually have to replace one of the objects&lt;/p&gt;  &lt;p&gt;source control: &lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;git init, &lt;/li&gt;    &lt;li&gt;git add . &lt;/li&gt;    &lt;li&gt;git commit –am “initial load” &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;going back to simple stuff:&lt;/p&gt;  &lt;p&gt;If we have a Fake object and we do Asserts against it, it is a Mock object:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:af562cda-113b-46dd-9063-10bf009188b1" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; max-height: 300px; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#66747b"&gt;//interaction tests!&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Test&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Add_EmptyString_CallsTheLogger()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; fakeLog &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StringCalculator&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; sc &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StringCalculator&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(fakeLog);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            sc&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Add(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StringAssert&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Contains(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;, fakeLog&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WrittenWith);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;    &lt;p&gt;poor mans injecting into the constructor a logger&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:d9522b6c-a831-4ae0-bd67-39335d328a35" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;class&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StringCalculator&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;readonly&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ILogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; logger;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; StringCalculator(&lt;/span&gt;&lt;span style="color:#8c8cb4"&gt;ILogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; logger)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;this&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;logger &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; logger;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Add(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; numbers)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            LogNumbers(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (IsEmpty(numbers))&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; DefaultEmptyResult();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; AllOtherValues(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; LogNumbers(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; numbers)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (IsEmpty(numbers))&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                logger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Write(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;else&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                logger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Write(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;bool&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; IsEmpty(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; numbers)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;IsNullOrEmpty(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; AllOtherValues(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; numbers)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Parse(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;static&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; DefaultEmptyResult()&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#ffcd22"&gt;0&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;;&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;Call a WebService if the log is full&lt;/h3&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:4d896cf4-bd7b-4ee1-b96c-d9d6a728907a" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;[&lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestCase&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestCase&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="color:#678cb1"&gt;TestCase&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;333&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;)]&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Logging_SingleNumberAndFirstLoggerIsFull_SecondaryLoggerIsCalled(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; number)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; firstLogger &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; secondLogger &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;FakeLogger&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            firstLogger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WillThrow &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;Exception&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;out of space&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StringCalculator&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; sc &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;new&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StringCalculator&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;(firstLogger);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            sc&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;SecondaryLogger &lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; secondLogger;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            sc&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Add(number);&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#66747b"&gt;//secondaryLogger is the mock object&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#678cb1"&gt;StringAssert&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Contains(number, secondLogger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;WrittenWith);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;the first test, which then became a testCase.&lt;/p&gt;  &lt;p&gt;   &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:91af80a8-6e13-4e07-9719-f290ffc79778" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #000000; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;public&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;int&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; Add(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; numbers)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            LogNumbers(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (IsEmpty(numbers))&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; DefaultEmptyResult();&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;return&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; AllOtherValues(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="color:#93c763"&gt;private&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="color:#93c763"&gt;void&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; LogNumbers(&lt;/span&gt;&lt;span style="color:#93c763"&gt;string&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; numbers)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;try&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;if&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (IsEmpty(numbers))&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                    logger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Write(&lt;/span&gt;&lt;span style="color:#ec7600"&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                &lt;/span&gt;&lt;span style="color:#93c763"&gt;else&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                    logger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Write(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="color:#93c763"&gt;catch&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; (&lt;/span&gt;&lt;span style="color:#678cb1"&gt;Exception&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt; e)&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            {&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;                SecondaryLogger&lt;/span&gt;&lt;span style="color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="color:#f1f2f3"&gt;Write(numbers);&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;            }&lt;/span&gt;&lt;br&gt; &lt;span style="color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/p&gt;  &lt;p&gt;nice having logic at same level of abstraction.&lt;/p&gt;</Content>
      <Created>2011-12-27T23:13:14.618-05:00</Created>
      <Modified>2011-12-27T23:35:17.1805-05:00</Modified>
      <EntryId>cf75b680-da51-49f1-beab-d754a401fb3c</EntryId>
      <Description />
      <Title>TDD 3 – Manual Mocks and Fakes</Title>
      <Categories>TDD;TekPub</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>