<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-05-22T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;   &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:34a52358-450f-47ce-bac3-569ba8d9fbba" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 400px; overflow: auto; padding: 2px 5px;"&gt;[&lt;span style="color:#2b91af"&gt;TestFixture&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;SimpleTypes&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; DisplayValues()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#008000"&gt;/*&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* Primitive types&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* &lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* int =   .. System.Int32  ...signed.. pos and neg&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* uint = System.UInt32&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* &lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* long = System.Int64&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* ulong = System.UInt64&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* &lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* byte = System.Byte (8 bits)&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* sbyte = System.SByte (8 bits)&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* &lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* short = System.Int16&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* ushort = System.UInt16&lt;/span&gt;&lt;br&gt;              &lt;span style="color:#008000"&gt;* */&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; bigInt = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(); &lt;br&gt; &lt;br&gt;             &lt;span style="color:#008000"&gt;//reference type.. piece of paper with instructions&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#008000"&gt;//value type.. like writing number 5 on piece of paper&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; x = 10; &lt;span style="color:#008000"&gt;//value type&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; y = x; &lt;span style="color:#008000"&gt;//copy current value of x into y&lt;/span&gt;&lt;br&gt;             x = 20;&lt;br&gt; &lt;br&gt;             x = x + 20;&lt;br&gt;             x += 20; &lt;span style="color:#008000"&gt;//compound assignment&lt;/span&gt;&lt;br&gt;             x++; &lt;span style="color:#008000"&gt;//postfix increment&lt;/span&gt;&lt;br&gt;             ++x; &lt;span style="color:#008000"&gt;//prefix increment&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Console&lt;/span&gt;.WriteLine(y); &lt;span style="color:#008000"&gt;//10&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="color:#008000"&gt;//int x = 10;&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#008000"&gt;//int y = x++;  //y would be 10! x would be 11..  not nice.&lt;/span&gt;&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; stuff()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; x = 10;&lt;br&gt;             &lt;span style="color:#008000"&gt;//x = x++;  //nasty x set to 10, x incremnt to 11, then assigned to 10 again&lt;/span&gt;&lt;br&gt;             x = x++ + ++x; &lt;span style="color:#008000"&gt;//ahhh.. # will evaluate left hand side, then right&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#008000"&gt;// 10 + 12&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="color:#008000"&gt;//BOMDAS Brackets Of Multiplication Division Addition Substraction&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Console&lt;/span&gt;.WriteLine(x);&lt;br&gt;         }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/p&gt;  &lt;p&gt;typing in /* will make comments keep on going!&lt;/p&gt;</Content>
      <Created>2012-05-22T23:38:52.259125-04:00</Created>
      <Modified>2012-05-22T23:38:52.259125-04:00</Modified>
      <EntryId>bec5bf9d-eae4-4356-878d-87d3f181e9c2</EntryId>
      <Description />
      <Title>Jon Skeet–Types</Title>
      <Categories>JonSkeet</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>