<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-06-06T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:e335bb58-3e43-4b85-8a41-a8dbedd4ff29" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 400px; overflow: auto; padding: 2px 5px;"&gt;[&lt;span style="color:#2b91af"&gt;TestFixture&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Euler19DateTests&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; GetAnswer_GivenNothing_ReturnAnswer()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;Euler19Dates&lt;/span&gt;.GetAnswer();&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(171, result);&lt;br&gt;         }&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Euler19Dates&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#008000"&gt;//How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?&lt;/span&gt;&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//1 Jan 1900 was a Monday.&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//Thirty days has September,&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//April, June and November.&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//All the rest have thirty-one,&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//Saving February alone,&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//Which has twenty-eight, rain or shine.&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//And on leap years, twenty-nine.&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; GetAnswer()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; countOfSundaysOnFirstOfMonth = 0;&lt;br&gt; &lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; StartDate = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;DateTime&lt;/span&gt;(1901, 1, 1);&lt;br&gt;             StartDate = StartDate.AddDays(-1);&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; EndDate = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;DateTime&lt;/span&gt;(2000, 12, 31);&lt;br&gt; &lt;br&gt;             &lt;span style="color:#008000"&gt;//make a list of all dates&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; dateList = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#2b91af"&gt;DateTime&lt;/span&gt;&amp;gt;();&lt;br&gt;             &lt;span style="color:#0000ff"&gt;while&lt;/span&gt; (StartDate.AddDays(1) &amp;lt;= EndDate)&lt;br&gt;             {&lt;br&gt;                 StartDate = StartDate.AddDays(1);&lt;br&gt;                 dateList.Add(StartDate);&lt;br&gt;             }&lt;br&gt; &lt;br&gt;             &lt;span style="color:#0000ff"&gt;foreach&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;var&lt;/span&gt; date &lt;span style="color:#0000ff"&gt;in&lt;/span&gt; dateList)&lt;br&gt;             {&lt;br&gt;                 &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; ((date.DayOfWeek == &lt;span style="color:#2b91af"&gt;DayOfWeek&lt;/span&gt;.Sunday) &amp;amp;&amp;amp; (date.Day == 1))&lt;br&gt;                 {&lt;br&gt;                     countOfSundaysOnFirstOfMonth++;&lt;br&gt;                 }&lt;br&gt;             }&lt;br&gt;             &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; countOfSundaysOnFirstOfMonth;&lt;br&gt;         }&lt;br&gt;     }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</Content>
      <Created>2012-06-07T16:31:57.421875-04:00</Created>
      <Modified>2012-06-07T16:31:57.421875-04:00</Modified>
      <EntryId>4db7c0e1-dfda-435e-9e83-cfdf42367f88</EntryId>
      <Description />
      <Title>Euler 19–Dates</Title>
      <Categories>Euler</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:27122d30-0cc6-434e-866d-06eec9c04218" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 400px; overflow: auto; padding: 2px 5px;"&gt;[&lt;span style="color:#2b91af"&gt;TestFixture&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Euler20FactorialTests&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; Factorial_Given10_Return3628800()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;Euler20Factorial&lt;/span&gt;.Factorial(10);&lt;br&gt;             &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; x = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt;(3628800);&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(x, result);&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; Sum_Given12345_ReturnSumOfDigits()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;Euler20Factorial&lt;/span&gt;.SumOfDigits(12345);&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(15, result);&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; Sum_Given3628800_ReturnSumOfDigits()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;Euler20Factorial&lt;/span&gt;.SumOfDigits(3628800);&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(27, result);&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; FactorialAndSumOfDigits_Given100_ReturnSumOfDigits()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;Euler20Factorial&lt;/span&gt;.FactorialAndSumOfDigits(100);&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(648, result);&lt;br&gt;         }&lt;br&gt; &lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Euler20Factorial&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#008000"&gt;//For example, 10! = 10  9  ...  3  2  1 = 3628800,&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//and the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27.&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//Find the sum of the digits in the number 100!&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; FactorialAndSumOfDigits(&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; number)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; result = Factorial(100);&lt;br&gt;             &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; sumOfDigits = SumOfDigits(result);&lt;br&gt;             &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; sumOfDigits;&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; Factorial(&lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; number)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; i = number - 1; i &amp;gt; 1; i--)&lt;br&gt;             {&lt;br&gt;                 number = number * i;&lt;br&gt;             }&lt;br&gt;             &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; number;&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; SumOfDigits(&lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; number)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; sum = 0;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;while&lt;/span&gt; (number != 0)&lt;br&gt;             {&lt;br&gt;                 &lt;span style="color:#008000"&gt;//divides number by 10 and returns the remainder&lt;/span&gt;&lt;br&gt;                 &lt;span style="color:#008000"&gt;//ie 1234.5  (therefore 5 is remainder)&lt;/span&gt;&lt;br&gt;                 &lt;span style="color:#008000"&gt;//we loop over each remainder from the right hand side to the left&lt;/span&gt;&lt;br&gt;                 &lt;span style="color:#2b91af"&gt;BigInteger&lt;/span&gt; x = number%10;&lt;br&gt;                 sum = sum + x;&lt;br&gt;                 number = number / 10;&lt;br&gt;             }&lt;br&gt;             &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;)sum;&lt;br&gt;         }&lt;br&gt;     }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;Good code for SumOfDigits from Greg: &lt;a href="http://stackoverflow.com/questions/478968/sum-of-digits-in-c-sharp"&gt;http://stackoverflow.com/questions/478968/sum-of-digits-in-c-sharp&lt;/a&gt;&lt;/p&gt;</Content>
      <Created>2012-06-07T17:44:21.546875-04:00</Created>
      <Modified>2012-06-07T17:44:21.546875-04:00</Modified>
      <EntryId>3af56337-ee19-4229-8265-6e4b315c7d96</EntryId>
      <Description />
      <Title>Euler 20–Factorial 100 Sum</Title>
      <Categories>Euler</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>