<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2013-05-16T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;“CUDAfy.NET is a .NET 4.0 library that allows writing of NVIDIA CUDA and (Intel/AMD/NVIDIA/Altera, etc) OpenCL applications from with .NET. There are no separate CUDA cu files or complex set-up procedures to launch GPU device functions. It follows the CUDA programming model and any knowledge gained from tutorials or books on CUDA can be easily transferred to CUDAfy, only in a clean .NET fashion.”&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hybriddsp.com"&gt;www.hybriddsp.com&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.cass-hpc.com/category/cudanet"&gt;http://www.cass-hpc.com/category/cudanet&lt;/a&gt; CUDA.NET has been modified by hybriddsp to support CUDA Toolkit &amp;gt;=3.2 (currently running 5.0)&lt;/p&gt;  &lt;p&gt;The Translator converts .NET code into CUDA or OpenCL code.&lt;/p&gt;  &lt;p&gt;Detailed guide on installing CUDA dev tools:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://docs.nvidia.com/cuda/cuda-getting-started-guide-for-microsoft-windows/index.html"&gt;http://docs.nvidia.com/cuda/cuda-getting-started-guide-for-microsoft-windows/index.html&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;latest nVidia drivers nVidia GeForce GT 550M – Should have compute of 2.1   &lt;br /&gt;29-Sep-12    &lt;br /&gt;9.18.13.694    &lt;br /&gt;&lt;a href="http://www.geforce.com/drivers/results/59707"&gt;http://www.geforce.com/drivers/results/59707&lt;/a&gt;    &lt;br /&gt;says I need 314.22 WHQL 25-Mar-13&amp;#160; 215.41MB&lt;/p&gt;  &lt;p&gt;**get Intel OpenCL SDK: &lt;a href="http://software.intel.com/en-us/vcsource/tools/opencl-sdk"&gt;http://software.intel.com/en-us/vcsource/tools/opencl-sdk&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Simple_Kernel&lt;/h2&gt;  &lt;p&gt;Functions running on a device are often referred to as kernels&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/CUDAfy.NET_64E8/image_2.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/CUDAfy.NET_64E8/image_thumb.png" width="534" height="377" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Simple_Kernel_Params&lt;/h3&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:7b1a7748-8f5b-430f-92f3-19fd4bbd8d30" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px;"&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Main(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] args)&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;simple_kernel_params&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Execute();&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;simple_kernel_params&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Execute()&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CudafyModule&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; km = &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CudafyTranslator&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Cudafy();&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;GPGPU&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; gpu = &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CudafyHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.GetDevice(&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CudafyModes&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Target, &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CudafyModes&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.DeviceId);&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;gpu.LoadModule(km);&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// we cannot return any value from a device function...so our result is passed via parameter c&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// out keyword not supported.. so use a vector&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// allocating memory on the device even though it will only contain one Int32 value&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; c;&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] dev_c = gpu.Allocate&amp;lt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;&amp;gt;(); &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// cudaMalloc one Int32&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;gpu.Launch().add(2, 7, dev_c); &lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// or gpu.Launch(1, 1, &amp;quot;add&amp;quot;, 2, 7, dev_c);&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//gpu.Launch(1000, 1000, &amp;quot;add&amp;quot;, 2, 7, dev_c);&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;// copying result back&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;gpu.CopyFromDevice(dev_c, &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;out&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; c);&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;2 + 7 = {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, c);&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//gpu.Launch().sub(2, 7, dev_c);&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//gpu.CopyFromDevice(dev_c, out c);&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#008000"&gt;//Console.WriteLine(&amp;quot;2 - 7 = {0}&amp;quot;, c);&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;gpu.Free(dev_c);&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;[&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Cudafy&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;]&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; add(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; a, &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; b, &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] c)&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;c[0] = a + b;&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;[&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Cudafy&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;]&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; sub(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; a, &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; b, &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] c)&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;c[0] = a - b;&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;    &lt;h3&gt;Enum_GPU&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/CUDAfy.NET_64E8/image_4.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/CUDAfy.NET_64E8/image_thumb_1.png" width="244" height="192" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:08e36b1c-53da-47a7-b03f-3d49246ca971" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px;"&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Program&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Main(&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;string&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;[] args)&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;enum_gpu&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Execute();&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;class&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;enum_gpu&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;public&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;static&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;void&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; Execute()&lt;/span&gt;&lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;int&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; i = 0;&lt;/span&gt;&lt;br&gt; &lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;foreach&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; (&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;GPGPUProperties&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; prop &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;in&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; &lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CudafyHost&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.GetDeviceProperties(&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;CudafyModes&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.Target))&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;   --- General Information for device {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; ---&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, i);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Name:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.Name);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Platform Name:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.PlatformName);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Device Id:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.DeviceId);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Compute capability:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;.{&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;1}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.Capability.Major, prop.Capability.Minor);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Clock rate: {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.ClockRate);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Simulated: {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.IsSimulated);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine();&lt;/span&gt;&lt;br&gt; &lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;   --- Memory Information for device {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; ---&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, i);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Total global mem:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.TotalMemory);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Total constant Mem:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.TotalConstantMemory);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Max mem pitch:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.MemoryPitch);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Texture Alignment:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.TextureAlignment);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine();&lt;/span&gt;&lt;br&gt; &lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;   --- MP Information for device {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt; ---&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, i);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Shared mem per mp: {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.SharedMemoryPerBlock);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Registers per mp:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.RegistersPerBlock);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Threads in warp:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.WarpSize);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Max threads per block:  {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.MaxThreadsPerBlock);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Max thread dimensions:  ({&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;, {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;1}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;, {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;2}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;)&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.MaxThreadsSize.x,&lt;/span&gt;&lt;br&gt;                                   &lt;span style="background:#ffffff;color:#000000"&gt;prop.MaxThreadsSize.y, prop.MaxThreadsSize.z);&lt;/span&gt;&lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine(&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;&amp;quot;Max grid dimensions:  ({&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;0}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;, {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;1}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;, {&lt;/span&gt;&lt;span style="background:#ffffff;color:#3cb371"&gt;2}&lt;/span&gt;&lt;span style="background:#ffffff;color:#a31515"&gt;)&amp;quot;&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;, prop.MaxGridSize.x, prop.MaxGridSize.y,&lt;/span&gt;&lt;br&gt;                                   &lt;span style="background:#ffffff;color:#000000"&gt;prop.MaxGridSize.z);&lt;/span&gt;&lt;br&gt; &lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;&lt;/span&gt;&lt;span style="background:#ffffff;color:#2b91af"&gt;Console&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;.WriteLine();&lt;/span&gt;&lt;br&gt; &lt;br&gt;                 &lt;span style="background:#ffffff;color:#000000"&gt;i++;&lt;/span&gt;&lt;br&gt;             &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt; &lt;br&gt;         &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;br&gt;     &lt;span style="background:#ffffff;color:#000000"&gt;}&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;h3&gt;Add_Loop_GPU&lt;/h3&gt;</Content>
      <Created>2013-05-17T03:20:33.4899661-04:00</Created>
      <Modified>2013-05-17T03:20:33.4899661-04:00</Modified>
      <EntryId>9d534a02-37a1-4277-991e-79f6f5d90aaa</EntryId>
      <Description />
      <Title>CUDAfy.NET</Title>
      <Categories>Cuda;Cudafy;OpenCL</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>