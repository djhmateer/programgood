<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-07-07T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/1890093/converting-a-generic-list-to-a-csv-string"&gt;http://stackoverflow.com/questions/1890093/converting-a-generic-list-to-a-csv-string&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Euler-51Prime-8-Digit_C47E/image_2.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Euler-51Prime-8-Digit_C47E/image_thumb.png" width="317" height="77" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Am working outside on the deck&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Euler-51Prime-8-Digit_C47E/image_4.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Euler-51Prime-8-Digit_C47E/image_thumb_1.png" width="221" height="420" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Keeping an eye on the temps on my CPUs and GPU.. anything &amp;gt; 80 is cause for concern..and 90’s something wrong.&lt;/p&gt;  &lt;p&gt;Also trying out Git For Windows.&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:6a01db7d-7640-42e5-88f1-9675c70ee322" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 500px; overflow: auto; padding: 2px 5px;"&gt;[&lt;span style="color:#2b91af"&gt;TestFixture&lt;/span&gt;]&lt;br&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;E51Tests&lt;/span&gt;&lt;br&gt; {&lt;br&gt;     [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; GetAll8DigitPrimes_Given_ReturnListPrimes()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt; result = &lt;span style="color:#2b91af"&gt;E51&lt;/span&gt;.GetAll8DigitPrimes();&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(1, result.Count);&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; ConvertListIntToCSVString_GivenListInt_ReturnCSVString()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; list = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt;() { 3, 5, 7, 11 };&lt;br&gt;         &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;E51&lt;/span&gt;.ConvertListIntToCSVString(list);&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(&lt;span style="color:#a31515"&gt;&amp;quot;3,5,7,11&amp;quot;&lt;/span&gt;, result);&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; ReadCSVAndConvertToList_Given_ReturnList()&lt;br&gt;     {&lt;br&gt;        &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt; result = &lt;span style="color:#2b91af"&gt;E51&lt;/span&gt;.ReadCSVAndConvertToList();&lt;br&gt;        &lt;span style="color:#2b91af"&gt;CollectionAssert&lt;/span&gt;.IsNotEmpty(result);&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     [&lt;span style="color:#2b91af"&gt;Test&lt;/span&gt;]&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; SmallestPrimeIn8PrimeFamily_Given_Return()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; result = &lt;span style="color:#2b91af"&gt;E51&lt;/span&gt;.SmallestPrimeIn8PrimeFamily();&lt;br&gt;         &lt;span style="color:#2b91af"&gt;Assert&lt;/span&gt;.AreEqual(1, result);&lt;br&gt;     }&lt;br&gt; }&lt;br&gt; &lt;br&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;E51&lt;/span&gt;&lt;br&gt; {&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; SmallestPrimeIn8PrimeFamily()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; smallestPrimeSoFar = 99999999;&lt;br&gt;         &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt; listOfPrimes = &lt;span style="color:#2b91af"&gt;E51&lt;/span&gt;.ReadCSVAndConvertToList();&lt;br&gt;         &lt;span style="color:#0000ff"&gt;foreach&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; p &lt;span style="color:#0000ff"&gt;in&lt;/span&gt; listOfPrimes)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; s = p.ToString();&lt;br&gt;             &lt;span style="color:#008000"&gt;//pick a digit&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; i = 0; i &amp;lt;= 7; i++)&lt;br&gt;             {&lt;br&gt;                 &lt;span style="color:#0000ff"&gt;char&lt;/span&gt; digit = s[i];&lt;br&gt;                 &lt;span style="color:#008000"&gt;//replace 1 or more of the other digits&lt;/span&gt;&lt;br&gt;                 &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; j = 0; j &amp;lt;= 7; j++)&lt;br&gt;                 {&lt;br&gt;                     &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (i != j)&lt;br&gt;                     {&lt;br&gt;                         &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; numToTry = s;&lt;br&gt;                         &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; sb = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;StringBuilder&lt;/span&gt;(numToTry);&lt;br&gt;                         sb[j] = digit;&lt;br&gt;                         &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; numChanged = sb.ToString();&lt;br&gt; &lt;br&gt;                         &lt;span style="color:#008000"&gt;//see if smallest&lt;/span&gt;&lt;br&gt;                         &lt;span style="color:#0000ff"&gt;int&lt;/span&gt; num = &lt;span style="color:#2b91af"&gt;Convert&lt;/span&gt;.ToInt32(numChanged);&lt;br&gt;                         &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (num &amp;gt; 10000000)&lt;br&gt;                         {&lt;br&gt;                             &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (num &amp;lt; smallestPrimeSoFar)&lt;br&gt;                             {&lt;br&gt;                                 &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (IsPrime(num))&lt;br&gt;                                 {&lt;br&gt;                                     &lt;span style="color:#2b91af"&gt;Console&lt;/span&gt;.WriteLine(num);&lt;br&gt;                                     smallestPrimeSoFar = num;&lt;br&gt;                                 }&lt;br&gt;                             }&lt;br&gt;                         }&lt;br&gt;                     }&lt;br&gt;                 }&lt;br&gt; &lt;br&gt;             }&lt;br&gt; &lt;br&gt;             &lt;span style="color:#008000"&gt;//see if prime&lt;/span&gt;&lt;br&gt;         }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; smallestPrimeSoFar;&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt; ReadCSVAndConvertToList()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; list = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt;();&lt;br&gt;         &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; csv = &lt;span style="color:#2b91af"&gt;File&lt;/span&gt;.ReadAllText(&lt;span style="color:#a31515"&gt;@&amp;quot;e:&amp;#92;temp&amp;#92;primes.csv&amp;quot;&lt;/span&gt;);&lt;br&gt;         &lt;span style="color:#0000ff"&gt;string&lt;/span&gt;[] array = csv.Split(&lt;span style="color:#a31515"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;);&lt;br&gt;         &lt;span style="color:#0000ff"&gt;foreach&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;var&lt;/span&gt; s &lt;span style="color:#0000ff"&gt;in&lt;/span&gt; array)&lt;br&gt;         {&lt;br&gt;             list.Add(&lt;span style="color:#2b91af"&gt;Convert&lt;/span&gt;.ToInt32(s));&lt;br&gt;         }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; list;&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; ConvertListIntToCSVString(&lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt; list)&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; csv = &lt;span style="color:#2b91af"&gt;String&lt;/span&gt;.Join(&lt;span style="color:#a31515"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;, list.Select(x =&amp;gt; x.ToString()).ToArray());&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; csv;&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt; GetAll8DigitPrimes()&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;var&lt;/span&gt; list = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0000ff"&gt;int&lt;/span&gt;&amp;gt;();&lt;br&gt;         &lt;span style="color:#008000"&gt;//for (int i = 10000000; i &amp;lt;= 99999999; i++)&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; i = 10000001; i &amp;lt;= 11199999; i = i + 2)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (IsPrime(i))&lt;br&gt;             {&lt;br&gt;                 list.Add(i);&lt;br&gt;                 &lt;span style="color:#008000"&gt;//Console.WriteLine(&amp;quot;{0:N0}&amp;quot;,i);&lt;/span&gt;&lt;br&gt;             }&lt;br&gt;         }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; list;&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;bool&lt;/span&gt; IsPrime(&lt;span style="color:#0000ff"&gt;long&lt;/span&gt; a)&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (a == 1) &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; &lt;span style="color:#0000ff"&gt;false&lt;/span&gt;;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (a == 2) &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; &lt;span style="color:#0000ff"&gt;true&lt;/span&gt;;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;for&lt;/span&gt; (&lt;span style="color:#0000ff"&gt;int&lt;/span&gt; i = 2; i &amp;lt;= &lt;span style="color:#2b91af"&gt;Math&lt;/span&gt;.Sqrt(a); i++)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (a % i == 0)&lt;br&gt;             {&lt;br&gt;                 &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; &lt;span style="color:#0000ff"&gt;false&lt;/span&gt;;&lt;br&gt;             }&lt;br&gt;         }&lt;br&gt;         &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; &lt;span style="color:#0000ff"&gt;true&lt;/span&gt;;&lt;br&gt;     }&lt;br&gt; }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;Code that works but does not solve this problem.&amp;#160; Had to do this to fully understand the problem.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Read / Write files&lt;/li&gt;    &lt;li&gt;Convert both ways List to CSV&lt;/li&gt; &lt;/ul&gt;</Content>
      <Created>2012-07-08T10:29:24.9490364-04:00</Created>
      <Modified>2012-07-09T12:10:54.4603286-04:00</Modified>
      <EntryId>0cbf8ba1-9807-4083-a61d-a9222d194257</EntryId>
      <Description />
      <Title>Euler 51–Prime 8 Digit</Title>
      <Categories>Euler</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>