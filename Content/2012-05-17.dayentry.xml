<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-05-16T20:00:00-04:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/NTP-Time-Server-Monitor_CE9E/image_2.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/NTP-Time-Server-Monitor_CE9E/image_thumb.png" width="546" height="282" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;To get to this screen, press the icon on NTP Status tab.&lt;/p&gt;  &lt;p&gt;needs port UDP 123 opened inbound&lt;/p&gt;  &lt;p&gt;&lt;a href="http://serverfault.com/questions/390061/windows-7-as-ntp-time-server"&gt;http://serverfault.com/questions/390061/windows-7-as-ntp-time-server&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;useful to sync up local servers clock with the ntpd service ie clock, internet time, point to localhost.&lt;/p&gt;</Content>
      <Created>2012-05-17T15:41:36.9375-04:00</Created>
      <Modified>2012-05-17T15:50:56.84375-04:00</Modified>
      <EntryId>53d87f43-44e2-40ae-88da-7d9fb40894af</EntryId>
      <Description />
      <Title>NTP Time Server Monitor</Title>
      <Categories>NTP</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
    <Entry>
      <Content>&lt;p&gt;Any time you instantiate or reference a concrete type within a class, you take a Dependency and make your code harder to test.&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:31c1fb47-7284-4a2f-b2a7-9ee4d0a2803c" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px;"&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; Licence(&lt;span style="color:#2b91af"&gt;Instant&lt;/span&gt; expirey, &lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#008000"&gt;//variables or local variables&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.expirey = expirey;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.clock = clock;&lt;br&gt;         }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;we are injecting a dependency here.&amp;#160; More loosely bound here than&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:0817e05f-b018-4ac6-ba26-8a135ce72b2c" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px;"&gt;&lt;br&gt; &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; Licence(&lt;span style="color:#2b91af"&gt;Instant&lt;/span&gt; expirey)&lt;br&gt; {&lt;br&gt;     &lt;span style="color:#008000"&gt;//variables or local variables&lt;/span&gt;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.expirey = expirey;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.clock = &lt;span style="color:#2b91af"&gt;SystemClock&lt;/span&gt;.Instance;&lt;br&gt; }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;tightly bound to a concrete implementation here.&lt;/p&gt;  &lt;p&gt;We made another class here called Diary which uses a clock too:&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:fbc030eb-2177-4668-9226-1d6737d059be" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px;"&gt; &lt;span style="color:#008000"&gt;//calendaring application which will want to know what time it is too!&lt;/span&gt;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Diary&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;LocalDatePattern&lt;/span&gt; outputPattern = &lt;span style="color:#2b91af"&gt;LocalDatePattern&lt;/span&gt;.CreateWithInvariantInfo(&lt;span style="color:#a31515"&gt;&amp;quot;yyyy-MM-dd&amp;quot;&lt;/span&gt;);&lt;br&gt;         &lt;span style="color:#008000"&gt;//fields&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;CalendarSystem&lt;/span&gt; calendar;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;DateTimeZone&lt;/span&gt; timeZone;&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//by demanding the dependencies in the constructor, classes are more flexible&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//especially if they are interfacess&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; Diary(&lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock, &lt;span style="color:#2b91af"&gt;CalendarSystem&lt;/span&gt; calendar, &lt;span style="color:#2b91af"&gt;DateTimeZone&lt;/span&gt; timeZone)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.clock = clock;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.calendar = calendar;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.timeZone = timeZone;&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; FormatToday()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#008000"&gt;//in system default timezone, and system default calendar&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#008000"&gt;//DateTime dateTime = DateTime.Today;&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#2b91af"&gt;LocalDate&lt;/span&gt; date = clock.Now.InZone(timeZone, calendar).LocalDateTime.Date;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (date.Month == 4)&lt;br&gt;             {  &lt;span style="color:#008000"&gt;//ncrunch showing black here - so tests are not covering this codepath&lt;/span&gt;&lt;br&gt;                 &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; &lt;span style="color:#a31515"&gt;&amp;quot;April fool&amp;quot;&lt;/span&gt;;&lt;br&gt;             }&lt;br&gt;             &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; outputPattern.Format(date);&lt;br&gt;         }&lt;br&gt;     }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:b1f0eaed-b21a-46cf-b63f-ca1ec5bdaaf7" class="wlWriterEditableSmartContent"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; max-height: 500px; overflow: auto; padding: 2px 5px;"&gt; &lt;span style="color:#008000"&gt;//still a class lib so can&amp;#39;t run it.. demonstrates concept&lt;/span&gt;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Program&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;static&lt;/span&gt; &lt;span style="color:#0000ff"&gt;void&lt;/span&gt; Main()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#008000"&gt;//manual dependency injection - this takes a lot of time and code to do&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#008000"&gt;//so people invented dependency injection frameworks aka Inversion of Control.&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock = &lt;span style="color:#2b91af"&gt;SystemClock&lt;/span&gt;.Instance;&lt;br&gt; &lt;br&gt;             &lt;span style="color:#2b91af"&gt;Licence&lt;/span&gt; licence = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Licence&lt;/span&gt;(&lt;span style="color:#2b91af"&gt;Instant&lt;/span&gt;.UnixEpoch, clock);&lt;br&gt;             &lt;span style="color:#2b91af"&gt;Diary&lt;/span&gt; diary = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Diary&lt;/span&gt;(clock,&lt;span style="color:#2b91af"&gt;CalendarSystem&lt;/span&gt;.Iso, &lt;span style="color:#2b91af"&gt;DateTimeZone&lt;/span&gt;.GetSystemDefault());&lt;br&gt; &lt;br&gt;             &lt;span style="color:#2b91af"&gt;DiaryPresenter&lt;/span&gt; presenter = &lt;span style="color:#0000ff"&gt;new&lt;/span&gt; &lt;span style="color:#2b91af"&gt;DiaryPresenter&lt;/span&gt;(diary, licence);&lt;br&gt;         }&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;DiaryPresenter&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; DiaryPresenter(&lt;span style="color:#2b91af"&gt;Diary&lt;/span&gt; diary, &lt;span style="color:#2b91af"&gt;Licence&lt;/span&gt; licence)&lt;br&gt;         {&lt;br&gt;         }&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Licence&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Instant&lt;/span&gt; expirey;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock;&lt;br&gt; &lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; Licence(&lt;span style="color:#2b91af"&gt;Instant&lt;/span&gt; expirey, &lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#008000"&gt;//variables or local variables&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.expirey = expirey;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.clock = clock;&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//property&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;bool&lt;/span&gt; HasExpired&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;get&lt;/span&gt; { &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; clock.Now &amp;gt;= expirey; }&lt;br&gt;         }&lt;br&gt;     }&lt;br&gt; &lt;br&gt;     &lt;span style="color:#008000"&gt;//calendaring application which will want to know what time it is too!&lt;/span&gt;&lt;br&gt;     &lt;span style="color:#0000ff"&gt;class&lt;/span&gt; &lt;span style="color:#2b91af"&gt;Diary&lt;/span&gt;&lt;br&gt;     {&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;LocalDatePattern&lt;/span&gt; outputPattern = &lt;span style="color:#2b91af"&gt;LocalDatePattern&lt;/span&gt;.CreateWithInvariantInfo(&lt;span style="color:#a31515"&gt;&amp;quot;yyyy-MM-dd&amp;quot;&lt;/span&gt;);&lt;br&gt;         &lt;span style="color:#008000"&gt;//fields&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;CalendarSystem&lt;/span&gt; calendar;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;private&lt;/span&gt; &lt;span style="color:#0000ff"&gt;readonly&lt;/span&gt; &lt;span style="color:#2b91af"&gt;DateTimeZone&lt;/span&gt; timeZone;&lt;br&gt; &lt;br&gt;         &lt;span style="color:#008000"&gt;//by demanding the dependencies in the constructor, classes are more flexible&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#008000"&gt;//especially if they are interfacess&lt;/span&gt;&lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; Diary(&lt;span style="color:#2b91af"&gt;IClock&lt;/span&gt; clock, &lt;span style="color:#2b91af"&gt;CalendarSystem&lt;/span&gt; calendar, &lt;span style="color:#2b91af"&gt;DateTimeZone&lt;/span&gt; timeZone)&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.clock = clock;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.calendar = calendar;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;this&lt;/span&gt;.timeZone = timeZone;&lt;br&gt;         }&lt;br&gt; &lt;br&gt;         &lt;span style="color:#0000ff"&gt;public&lt;/span&gt; &lt;span style="color:#0000ff"&gt;string&lt;/span&gt; FormatToday()&lt;br&gt;         {&lt;br&gt;             &lt;span style="color:#008000"&gt;//in system default timezone, and system default calendar&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#008000"&gt;//DateTime dateTime = DateTime.Today;&lt;/span&gt;&lt;br&gt;             &lt;span style="color:#2b91af"&gt;LocalDate&lt;/span&gt; date = clock.Now.InZone(timeZone, calendar).LocalDateTime.Date;&lt;br&gt;             &lt;span style="color:#0000ff"&gt;if&lt;/span&gt; (date.Month == 4)&lt;br&gt;             {  &lt;span style="color:#008000"&gt;//ncrunch showing black here - so tests are not covering this codepath&lt;/span&gt;&lt;br&gt;                 &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; &lt;span style="color:#a31515"&gt;&amp;quot;April fool&amp;quot;&lt;/span&gt;;&lt;br&gt;             }&lt;br&gt;             &lt;span style="color:#0000ff"&gt;return&lt;/span&gt; outputPattern.Format(date);&lt;br&gt;         }&lt;br&gt;     }&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;Manually doing dependency injection.&amp;#160; Setting up each component explicitly.&amp;#160; Each is loosely coupled&lt;/p&gt;  &lt;p&gt;Licences don’t know about Diaries&lt;/p&gt;  &lt;p&gt;Diaries don’t know about Licences..&lt;/p&gt;  &lt;p&gt;DiaryPresenter knows about diary and licence, but not about a clock or timezone directly.&lt;/p&gt;  &lt;p&gt;notice SystemClock.Instance is a singleton.&lt;/p&gt;  &lt;p&gt;can get very hard to maintain&lt;/p&gt;</Content>
      <Created>2012-05-16T23:03:46.578125-04:00</Created>
      <Modified>2012-05-16T23:03:46.578125-04:00</Modified>
      <EntryId>73d3a976-570c-438f-a905-d86a715e8bc8</EntryId>
      <Description />
      <Title>TekPub 3–Jon Skeet–Dependency Injection manually</Title>
      <Categories>TekPub</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>