<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2012-12-05T19:00:00-05:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;From my question on directly testing RIA Services calls.&lt;/p&gt;  &lt;p&gt;&lt;a title="http://stackoverflow.com/questions/13510361/ria-services-where-to-call-savechanges-from-a-test/13622463#13622463" href="http://stackoverflow.com/questions/13510361/ria-services-where-to-call-savechanges-from-a-test/13622463#13622463"&gt;http://stackoverflow.com/questions/13510361/ria-services-where-to-call-savechanges-from-a-test/13622463#13622463&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a title="http://social.msdn.microsoft.com/Forums/en-US/vstest/thread/5e991b0d-8061-4c4e-a17d-82b4abd58d6c" href="http://social.msdn.microsoft.com/Forums/en-US/vstest/thread/5e991b0d-8061-4c4e-a17d-82b4abd58d6c"&gt;http://social.msdn.microsoft.com/Forums/en-US/vstest/thread/5e991b0d-8061-4c4e-a17d-82b4abd58d6c&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://nuget.org/packages/SilverlightToolkit-Testing"&gt;http://nuget.org/packages/SilverlightToolkit-Testing&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Test runners:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;SL App &lt;/li&gt;    &lt;li&gt;Silverlight Unit Test Adapter for VS2012 - &lt;a title="http://visualstudiogallery.msdn.microsoft.com/caca1e81-becb-41e4-9110-bc247f3f400b?SRC=Home" href="http://visualstudiogallery.msdn.microsoft.com/caca1e81-becb-41e4-9110-bc247f3f400b?SRC=Home"&gt;http://visualstudiogallery.msdn.microsoft.com/caca1e81-becb-41e4-9110-bc247f3f400b?SRC=Home&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;AGUnit and Resharper &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Testing front end (eg bindings load)&lt;/p&gt;  &lt;p&gt;&lt;a title="http://vanderbiest.org/blog/#/Search" href="http://vanderbiest.org/blog/#/Search"&gt;http://vanderbiest.org/blog/#/Search&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;How To&lt;/h3&gt;  &lt;p&gt;Make a new Silverlight standard project.&amp;#160; No RIA link&lt;/p&gt;  &lt;p&gt;NuGet search: silverlight testing&amp;#160; find: SilverlightToolkit-Testing&lt;/p&gt;  &lt;p&gt;add ref ….libs\RIA Services\v1.0\Libraries\Silverlight\System.ServiceModel.DomainServices.Client&lt;/p&gt;  &lt;p&gt;add ref to ClientApp (the SL app we’re testing)&lt;/p&gt;    &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:41ff2832-9013-4949-82e8-7d98988b50b9" class="wlWriterEditableSmartContent" style="float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background-color: #ffffff; overflow: auto; padding: 2px 5px; white-space: nowrap"&gt;&lt;span style="background:#22282a;color:#93c763"&gt;using&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; Microsoft&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Silverlight&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Testing;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#93c763"&gt;using&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; Microsoft&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;VisualStudio&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;TestTools&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;UnitTesting;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#93c763"&gt;using&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; System&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Linq;&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#93c763"&gt;using&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; UER&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;ClientApp&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Web&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Services;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;span style="background:#22282a;color:#93c763"&gt;namespace&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; UER&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;ClientApp&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Tests&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;{&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;    [&lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;TestClass&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;    &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;public&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;class&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;SLTests&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; : &lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;SilverlightTest&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;    {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;TestMethod&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;public&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;void&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; simpletest_givennothing_1equals1()&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;Assert&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;AreEqual(&lt;/span&gt;&lt;span style="background:#22282a;color:#ffcd22"&gt;1&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;, &lt;/span&gt;&lt;span style="background:#22282a;color:#ffcd22"&gt;1&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;TestMethod&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        [&lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;Asynchronous&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;]&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;public&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;void&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; AsynchronousWCFCallWithGetStudentWCFCommand()&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        {&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;var&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; target &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#93c763"&gt;new&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;UERDomainContext&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;();&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="background:#22282a;color:#66747b"&gt;// Arrange&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueCallback(() &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Load(target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;GetAccountsQuery()));&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueConditional(() &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;!&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;IsLoading);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueCallback(() &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;Assert&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;IsTrue(target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Accounts&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Any()));&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="background:#22282a;color:#66747b"&gt;// Act&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueCallback(() &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Accounts&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;First()&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;Name &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#ec7600"&gt;&amp;quot;NewValue&amp;quot;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueCallback(() &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;SubmitChanges());&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            &lt;/span&gt;&lt;span style="background:#22282a;color:#66747b"&gt;//// Assert&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueConditional(() &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;!&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;IsSubmitting);&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueCallback(() &lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt; &lt;/span&gt;&lt;span style="background:#22282a;color:#678cb1"&gt;Assert&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;IsFalse(target&lt;/span&gt;&lt;span style="background:#22282a;color:#e8e2b7"&gt;.&lt;/span&gt;&lt;span style="background:#22282a;color:#f1f2f3"&gt;HasChanges));&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;            EnqueueTestComplete();&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;        }&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;    }&lt;/span&gt;&lt;br&gt; &lt;span style="background:#22282a;color:#f1f2f3"&gt;}&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;    &lt;p&gt;Test runner is really not very usable at the top level (ie takes 20s to really run properly?)&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Testing-in-vs2012_BE77/image_2.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.programgood.net/content/binary/Windows-Live-Writer/Silverlight-Testing-in-vs2012_BE77/image_thumb.png" width="553" height="244" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Try R# and Agunit&lt;/p&gt;  &lt;p&gt;Anything to do with databases just seems to saying:&amp;#160; Running… and never finishes.&lt;/p&gt;  &lt;p&gt;However AGUnit doesn’t surface async calls currently: &lt;a title="http://agunit.codeplex.com/discussions/405630" href="http://agunit.codeplex.com/discussions/405630"&gt;http://agunit.codeplex.com/discussions/405630&lt;/a&gt;&lt;/p&gt;</Content>
      <Created>2012-12-06T05:10:51.1203576-05:00</Created>
      <Modified>2012-12-06T05:10:51.1203576-05:00</Modified>
      <EntryId>ef0a863b-1a3b-4f7a-a73f-d35b78ef2eea</EntryId>
      <Description />
      <Title>Silverlight Testing in vs2012</Title>
      <Categories>Silverlight;Testing</Categories>
      <Author>admin</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>